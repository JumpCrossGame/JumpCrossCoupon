{
  "id": "3e29516c6dcfee28b8464aa2a0a4cf4f",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.25",
  "solcLongVersion": "0.8.25+commit.b61c2a91",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/JumpCrossCoupon.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n *    ___                       _____\n *   |_  |                     /  __ \\\n *     | |_   _ _ __ ___  _ __ | /  \\/_ __ ___  ___ ___\n *     | | | | | '_ ` _ \\| '_ \\| |   | '__/ _ \\/ __/ __|\n * /\\__/ | |_| | | | | | | |_) | \\__/| | | (_) \\__ \\__ \\\n * \\____/ \\__,_|_| |_| |_| .__/ \\____|_|  \\___/|___|___/\n *                       | |\n *                       |_|\n *\n * A Game token by JumpCross Game.\n */\n\n/// @title JCC(JumpCrossCoupon)-ERC20\n/// @author 0xmmq\n/// @notice You can use this contract to convert or redeem the JumpCross game coupon to play or exit the game.\ncontract JumpCrossCoupon is ERC20, Ownable, ReentrancyGuard {\n    uint256 public constant EXCHANGE_RATE = 0.000014 ether;\n    uint256 public constant PROTOCOL_FEE_UPPER_LIMIT = 0.01 ether;\n\n    /// @notice The following variables are used to calculate the protocol fee.\n    /// The fomula is: fee = (userSentEth * protocolFeeFactor) / 10^protocolFeeScale\n    /// Pawn fee range: [1e-18, Min(9%, 0.01 eth)].\n    /// Redeem fee range: [1e-18, Min(45%, 0.01 * _protocolExitMultiplier eth)].\n    uint256 public protocolFeeFactor;\n    uint256 public protocolFeeScale;\n    uint256 public protocolExitMultiplier;\n\n    uint256 public protocolRevenue;\n\n    error InsufficientFundsError(uint256 required, uint256 inputed);\n    error InvalidExchangeAmountError(uint256 inputed);\n    error SetProtocolFeeError(string message);\n\n    event UpdateProtocolFee(\n        uint256 protocolFeeFactor,\n        uint256 protocolFeeScale,\n        uint256 protocolExitMultiplier\n    );\n\n    constructor() ERC20(\"JumpCrossCoupon\", \"JCC\") Ownable(_msgSender()) {\n        protocolFeeFactor = 8;\n        protocolFeeScale = 10 ** 3;\n        protocolExitMultiplier = 2;\n    }\n\n    /**\n     *    override functions\n     */\n\n    /// @notice Inform the user of the decimal precision of this token.\n    /// @return Decimal precision\n    function decimals() public pure override returns (uint8) {\n        return 0;\n    }\n\n    /**\n     *    Extended ERC20 functions\n     */\n\n    /// @notice Users specify the amount of JCC tokens they expect to receive.\n    /// After a series of checks, the contract will send JCC tokens to the user\n    /// by exchanging ETH for JCC tokens at a fixed exchange rate.\n    /// Users have to send extra protocol fee in order for this function to execute successfully.\n    /// @param amount The number of JCC tokens that users expect to receive\n    function pawn(uint256 amount) external payable {\n        if (amount <= 0) {\n            revert InvalidExchangeAmountError(amount);\n        }\n\n        uint256 ethAmount = (amount * EXCHANGE_RATE * 1 ether) / 1 ether;\n        uint256 fee = (ethAmount * protocolFeeFactor) / protocolFeeScale;\n        uint256 total = 0;\n\n        if (fee > PROTOCOL_FEE_UPPER_LIMIT) {\n            fee = PROTOCOL_FEE_UPPER_LIMIT;\n        }\n\n        total = ethAmount + fee;\n\n        if (msg.value < total) {\n            revert InsufficientFundsError(total, msg.value);\n        }\n\n        protocolRevenue += fee;\n\n        _mint(_msgSender(), amount);\n    }\n\n    /// @notice Users specify the amount of JCC tokens they expect to swap for ETH.\n    /// Users have to send extra protocol fee in order for this function to execute successfully.\n    /// @param amount The number of JCC tokens to swap for ETH\n    function redeem(uint256 amount) external nonReentrant {\n        if (amount <= 0) {\n            revert InvalidExchangeAmountError(amount);\n        }\n\n        _burn(_msgSender(), amount);\n\n        uint256 ethAmount = (amount * EXCHANGE_RATE * 1 ether) / 1 ether;\n        uint256 fee = (ethAmount * protocolFeeFactor * protocolExitMultiplier) /\n            protocolFeeScale;\n        uint256 total = 0;\n\n        uint256 feeUpperLimitForRedemption = PROTOCOL_FEE_UPPER_LIMIT *\n            protocolExitMultiplier;\n\n        // Since the `fee` is always < `ethAmount`,\n        // the max value is `ethAmount * 0.45`,\n        // and the `feeUpperLimitForRedemption` is only applied when `fee` > `feeUpperLimitForRedemption`,\n        // that is, `ethAmount` > `fee` > `feeUpperLimitForRedemption`,\n        // so it is guaranteed that there will be no arithmetic overflow in the following calculations.\n        unchecked {\n            if (fee > feeUpperLimitForRedemption) {\n                fee = feeUpperLimitForRedemption;\n            }\n\n            total = ethAmount - fee;\n        }\n\n        protocolRevenue += fee;\n\n        payable(_msgSender()).transfer(total);\n    }\n\n    /**\n     *    Owner functions\n     */\n\n    /// @notice Update the protocol fee parameters\n    /// @dev Parameter values must comply with the range defined in advance to ensure that the protocol\n    /// fee is within a reasonable range\n    /// @param _protocolFeeFactor Protocol fee numerator\n    /// @param _protocolFeeDecimals Protocol fee denominator decimals\n    /// @param _protocolExitMultiplier Exit multiplier for protocol protection\n    function updateProtocolFee(\n        uint256 _protocolFeeFactor,\n        uint256 _protocolFeeDecimals,\n        uint256 _protocolExitMultiplier\n    ) external onlyOwner {\n        _updateProtocolFee(\n            _protocolFeeFactor,\n            _protocolFeeDecimals,\n            _protocolExitMultiplier\n        );\n\n        protocolFeeFactor = _protocolFeeFactor;\n        protocolFeeScale = 10 ** _protocolFeeDecimals;\n        protocolExitMultiplier = _protocolExitMultiplier;\n    }\n\n    // @dev Owner can claim the protocol revenue.\n    function claimRevenue() external onlyOwner {\n        uint256 _protocolRevenue = protocolRevenue;\n        protocolRevenue = 0;\n        payable(_msgSender()).transfer(_protocolRevenue);\n    }\n\n    // @dev Helper function for making sure the protocol fee is within a reasonable range.\n    // Pawn fee range: [1e-18, Min(9%, 0.01 eth)].\n    // Redeem fee range: [1e-18, Min(45%, 0.01 * _protocolExitMultiplier eth)].\n    // @param _protocolFeeFactor Protocol fee numerator\n    // @param _protocolFeeDecimals Protocol fee denominator decimals\n    // @param _protocolExitMultiplier Exit multiplier for protocol protection\n    function _updateProtocolFee(\n        uint256 _protocolFeeFactor,\n        uint256 _protocolFeeDecimals,\n        uint256 _protocolExitMultiplier\n    ) internal {\n        if (_protocolFeeFactor < 1 || _protocolFeeFactor > 9) {\n            revert SetProtocolFeeError(\"Invalid protocol fee factor\");\n        }\n\n        if (_protocolFeeDecimals < 2 || _protocolFeeDecimals > 18) {\n            revert SetProtocolFeeError(\"Invalid protocol fee decimals\");\n        }\n\n        if (_protocolExitMultiplier < 1 || _protocolExitMultiplier > 5) {\n            revert SetProtocolFeeError(\"Invalid protocol exit multiplier\");\n        }\n\n        emit UpdateProtocolFee(\n            _protocolFeeFactor,\n            _protocolFeeDecimals,\n            _protocolExitMultiplier\n        );\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "cancun",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 934,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                933
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              284
            ],
            "IERC20Errors": [
              189
            ],
            "IERC721Errors": [
              237
            ]
          },
          "id": 285,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "138:139:1",
                "text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
              },
              "fullyImplemented": true,
              "id": 189,
              "linearizedBaseContracts": [
                189
              ],
              "name": "IERC20Errors",
              "nameLocation": "288:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "307:309:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 159,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "627:24:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "660:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "652:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "676:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "668:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "693:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "685:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:49:1"
                  },
                  "src": "621:80:1"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "707:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 164,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "870:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "897:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "889:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:16:1"
                  },
                  "src": "864:41:1"
                },
                {
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "911:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 169,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1081:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1110:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1102:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1101:18:1"
                  },
                  "src": "1075:45:1"
                },
                {
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "1126:345:1",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 178,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1482:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1517:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1509:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1509:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1534:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1526:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1526:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1553:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1545:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1508:52:1"
                  },
                  "src": "1476:85:1"
                },
                {
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1567:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 183,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1752:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1781:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1773:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:18:1"
                  },
                  "src": "1746:45:1"
                },
                {
                  "documentation": {
                    "id": 184,
                    "nodeType": "StructuredDocumentation",
                    "src": "1797:195:1",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 188,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2003:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2031:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "2023:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2023:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2022:17:1"
                  },
                  "src": "1997:43:1"
                }
              ],
              "scope": 285,
              "src": "278:1764:1",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 190,
                "nodeType": "StructuredDocumentation",
                "src": "2044:141:1",
                "text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
              },
              "fullyImplemented": true,
              "id": 237,
              "linearizedBaseContracts": [
                237
              ],
              "name": "IERC721Errors",
              "nameLocation": "2196:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2216:219:1",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 195,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2446:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2473:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2465:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2465:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2464:15:1"
                  },
                  "src": "2440:40:1"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "2486:132:1",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 200,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2629:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2660:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "2652:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2652:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2651:17:1"
                  },
                  "src": "2623:46:1"
                },
                {
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "2675:289:1",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 209,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2975:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3004:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "2996:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2996:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3020:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3012:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3037:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3029:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3029:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2995:48:1"
                  },
                  "src": "2969:75:1"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "3050:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 214,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3213:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3241:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 214,
                        "src": "3233:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3233:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3232:16:1"
                  },
                  "src": "3207:42:1"
                },
                {
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3255:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 219,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3425:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3455:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3447:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3447:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3446:18:1"
                  },
                  "src": "3419:46:1"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3471:247:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 226,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3729:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3764:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3756:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3756:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3782:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3774:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3755:35:1"
                  },
                  "src": "3723:68:1"
                },
                {
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "3797:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 231,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3982:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4012:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "4004:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4004:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4003:18:1"
                  },
                  "src": "3976:46:1"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "4028:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 236,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4236:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4266:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "4258:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4258:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4257:18:1"
                  },
                  "src": "4230:46:1"
                }
              ],
              "scope": 285,
              "src": "2186:2092:1",
              "usedErrors": [
                195,
                200,
                209,
                214,
                219,
                226,
                231,
                236
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "4280:143:1",
                "text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
              },
              "fullyImplemented": true,
              "id": 284,
              "linearizedBaseContracts": [
                284
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4434:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "4455:361:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 249,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4827:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4862:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4854:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4854:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4878:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4870:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4870:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4895:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4887:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4887:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4911:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4903:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4903:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4853:66:1"
                  },
                  "src": "4821:99:1"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "4926:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 254,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5089:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5118:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "5110:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5110:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5109:16:1"
                  },
                  "src": "5083:43:1"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "5132:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 259,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5302:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5333:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5325:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5325:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5324:18:1"
                  },
                  "src": "5296:47:1"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "5349:256:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 266,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5616:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5653:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5645:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5645:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5671:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5663:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5663:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5644:33:1"
                  },
                  "src": "5610:68:1"
                },
                {
                  "documentation": {
                    "id": 267,
                    "nodeType": "StructuredDocumentation",
                    "src": "5684:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 271,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5869:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5900:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "5892:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5892:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5891:18:1"
                  },
                  "src": "5863:47:1"
                },
                {
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "5916:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 276,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6124:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6155:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "6147:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6147:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6146:18:1"
                  },
                  "src": "6118:47:1"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "6171:280:1",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 283,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6462:25:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6496:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6488:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6488:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6515:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6507:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6507:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6487:41:1"
                  },
                  "src": "6456:73:1"
                }
              ],
              "scope": 285,
              "src": "4424:2107:1",
              "usedErrors": [
                249,
                254,
                259,
                266,
                271,
                276,
                283
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6420:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 800,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 286,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 878,
              "src": "131:36:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 287,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 904,
              "src": "168:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 289,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 903,
                    "src": "176:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 934,
              "src": "232:48:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 291,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "240:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 285,
              "src": "281:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 293,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "289:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 296,
                    "name": "Context",
                    "nameLocations": [
                      "1428:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "1428:7:2"
                  },
                  "id": 297,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1428:7:2"
                },
                {
                  "baseName": {
                    "id": 298,
                    "name": "IERC20",
                    "nameLocations": [
                      "1437:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "1437:6:2"
                  },
                  "id": 299,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1437:6:2"
                },
                {
                  "baseName": {
                    "id": 300,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1445:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 903,
                    "src": "1445:14:2"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1445:14:2"
                },
                {
                  "baseName": {
                    "id": 302,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1461:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 189,
                    "src": "1461:12:2"
                  },
                  "id": 303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1461:12:2"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 295,
                "nodeType": "StructuredDocumentation",
                "src": "348:1052:2",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
              },
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                189,
                903,
                877,
                933
              ],
              "name": "ERC20",
              "nameLocation": "1419:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1524:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1480:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 306,
                    "keyName": "account",
                    "keyNameLocation": "1496:7:2",
                    "keyType": {
                      "id": 304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1488:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1480:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 305,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1507:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1612:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1540:83:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 312,
                    "keyName": "account",
                    "keyNameLocation": "1556:7:2",
                    "keyType": {
                      "id": 308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1548:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1540:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 311,
                      "keyName": "spender",
                      "keyNameLocation": "1583:7:2",
                      "keyType": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1575:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1567:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1594:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1646:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1630:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1680:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1665:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1706:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1691:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "1952:57:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 327,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1962:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "1970:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1962:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "1962:13:2"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "1985:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "1995:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1985:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1985:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1720:171:2",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 336,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1922:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1908:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1908:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1943:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1929:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1929:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1907:44:2"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1952:0:2"
                  },
                  "scope": 799,
                  "src": "1896:113:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    890
                  ],
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "2134:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 342,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "2151:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 341,
                        "id": 343,
                        "nodeType": "Return",
                        "src": "2144:12:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "2015:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "2083:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2087:2:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "2119:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2119:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2118:15:2"
                  },
                  "scope": 799,
                  "src": "2074:89:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    896
                  ],
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2338:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2355:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 350,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2348:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "2169:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "2285:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2291:2:2"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "2323:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2323:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2322:15:2"
                  },
                  "scope": 799,
                  "src": "2276:93:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    902
                  ],
                  "body": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "3058:26:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3075:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 359,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "3068:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "2375:622:2",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "3011:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3019:2:2"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "3051:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3051:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3050:7:2"
                  },
                  "scope": 799,
                  "src": "3002:82:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    826
                  ],
                  "body": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "3205:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "3222:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 368,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "3215:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 364,
                    "nodeType": "StructuredDocumentation",
                    "src": "3090:49:2",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "3153:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3164:2:2"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "3196:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3196:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3195:9:2"
                  },
                  "scope": 799,
                  "src": "3144:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    834
                  ],
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "3373:42:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 380,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3390:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "id": 381,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3400:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3390:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 379,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "3383:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 373,
                    "nodeType": "StructuredDocumentation",
                    "src": "3247:47:2",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "3308:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3326:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "3318:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3318:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3317:17:2"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "3364:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3364:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3363:9:2"
                  },
                  "scope": 799,
                  "src": "3299:116:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    844
                  ],
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "3685:103:2",
                    "statements": [
                      {
                        "assignments": [
                          396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 396,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3703:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 408,
                            "src": "3695:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3695:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 399,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 397,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "3711:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3711:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3695:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 401,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3743:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 402,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "3750:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 403,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "3754:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 400,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "3733:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3733:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "3733:27:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3777:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 394,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "3770:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 386,
                    "nodeType": "StructuredDocumentation",
                    "src": "3421:184:2",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3619:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3636:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3628:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3628:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3648:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3640:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3640:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3627:27:2"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3679:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3679:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3678:6:2"
                  },
                  "scope": 799,
                  "src": "3610:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    854
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "3935:51:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 419,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3952:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 421,
                            "indexExpression": {
                              "id": 420,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "3964:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3952:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "id": 422,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "3971:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3952:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 418,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "3945:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "3794:47:2",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3855:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3873:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3865:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3865:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3888:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3880:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3880:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3864:32:2"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3926:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3926:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3925:9:2"
                  },
                  "scope": 799,
                  "src": "3846:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    864
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "4372:107:2",
                    "statements": [
                      {
                        "assignments": [
                          437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 437,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4390:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "4382:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4382:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 438,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4398:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4398:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4382:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4429:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "4436:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "4445:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 441,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 690,
                            "src": "4420:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4420:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4420:31:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4468:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 435,
                        "id": 448,
                        "nodeType": "Return",
                        "src": "4461:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "3992:296:2",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4302:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4318:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4310:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4310:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4335:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4327:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4327:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4309:32:2"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4366:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4366:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4365:6:2"
                  },
                  "scope": 799,
                  "src": "4293:186:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    876
                  ],
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "5132:151:2",
                    "statements": [
                      {
                        "assignments": [
                          463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 463,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "5150:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "5142:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5142:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 466,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "5160:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5160:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5142:30:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 468,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "5198:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "5204:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 470,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5213:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 467,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "5182:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5182:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "5182:37:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "5239:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 475,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "5245:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 476,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5249:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 473,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "5229:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5229:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "5229:26:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5272:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 461,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "5265:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4485:549:2",
                    "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "5048:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5069:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "5061:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5061:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5083:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "5075:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5075:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5095:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "5087:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5087:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5060:41:2"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "5126:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5126:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5125:6:2"
                  },
                  "scope": 799,
                  "src": "5039:244:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "5725:231:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 492,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5739:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5755:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5747:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5747:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5747:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5739:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 506,
                        "nodeType": "IfStatement",
                        "src": "5735:86:2",
                        "trueBody": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5759:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5807:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5799:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 499,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5799:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5799:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 498,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "5780:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5780:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 504,
                              "nodeType": "RevertStatement",
                              "src": "5773:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5834:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5848:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5840:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5840:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5840:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5834:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "IfStatement",
                        "src": "5830:86:2",
                        "trueBody": {
                          "id": 520,
                          "nodeType": "Block",
                          "src": "5852:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5902:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5894:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 514,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5894:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5894:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 513,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "5873:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5873:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 519,
                              "nodeType": "RevertStatement",
                              "src": "5866:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5933:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 524,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "5939:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5943:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 522,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "5925:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5925:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "5289:362:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5665:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5683:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5675:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5675:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5697:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5689:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5689:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5709:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5701:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5701:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5674:41:2"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5725:0:2"
                  },
                  "scope": 799,
                  "src": "5656:300:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "6346:1032:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 539,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "6360:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6376:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6368:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6368:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6368:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6360:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 576,
                          "nodeType": "Block",
                          "src": "6534:362:2",
                          "statements": [
                            {
                              "assignments": [
                                551
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 551,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6556:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 576,
                                  "src": "6548:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 550,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6548:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 555,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 552,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "6570:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 554,
                                "indexExpression": {
                                  "id": 553,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "6580:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6570:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6548:37:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 556,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 551,
                                  "src": "6603:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 557,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6617:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6603:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 566,
                              "nodeType": "IfStatement",
                              "src": "6599:115:2",
                              "trueBody": {
                                "id": 565,
                                "nodeType": "Block",
                                "src": "6624:90:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 560,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 532,
                                          "src": "6674:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 561,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 551,
                                          "src": "6680:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 562,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 536,
                                          "src": "6693:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 559,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6649:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) pure"
                                        }
                                      },
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6649:50:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 564,
                                    "nodeType": "RevertStatement",
                                    "src": "6642:57:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 575,
                              "nodeType": "UncheckedBlock",
                              "src": "6727:159:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 567,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6834:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 569,
                                      "indexExpression": {
                                        "id": 568,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 532,
                                        "src": "6844:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6834:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 570,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 551,
                                        "src": "6852:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 571,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "6866:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6852:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6834:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 574,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6834:37:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 577,
                        "nodeType": "IfStatement",
                        "src": "6356:540:2",
                        "trueBody": {
                          "id": 549,
                          "nodeType": "Block",
                          "src": "6380:148:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 545,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 315,
                                  "src": "6496:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 546,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6512:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6496:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 548,
                              "nodeType": "ExpressionStatement",
                              "src": "6496:21:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 578,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6910:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6924:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6916:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6916:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6916:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6910:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "7125:206:2",
                          "statements": [
                            {
                              "id": 596,
                              "nodeType": "UncheckedBlock",
                              "src": "7139:182:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 590,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "7284:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 592,
                                      "indexExpression": {
                                        "id": 591,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 534,
                                        "src": "7294:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7284:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 593,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "7301:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7284:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 595,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7284:22:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 598,
                        "nodeType": "IfStatement",
                        "src": "6906:425:2",
                        "trueBody": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6928:191:2",
                          "statements": [
                            {
                              "id": 588,
                              "nodeType": "UncheckedBlock",
                              "src": "6942:167:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 584,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "7073:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 585,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "7089:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7073:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 587,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7073:21:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "7355:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 601,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "7361:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 602,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7365:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 599,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "7346:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7346:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 604,
                        "nodeType": "EmitStatement",
                        "src": "7341:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "5962:304:2",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "6280:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6296:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6288:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6288:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6310:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6302:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6302:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6322:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6314:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6314:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6287:41:2"
                  },
                  "returnParameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6346:0:2"
                  },
                  "scope": 799,
                  "src": "6271:1107:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "7777:152:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "7791:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7810:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7802:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7802:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7802:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7791:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "IfStatement",
                        "src": "7787:91:2",
                        "trueBody": {
                          "id": 627,
                          "nodeType": "Block",
                          "src": "7814:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7864:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7856:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 621,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7856:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7856:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "7835:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7835:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 626,
                              "nodeType": "RevertStatement",
                              "src": "7828:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7903:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7895:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 630,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7895:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7895:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "7907:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 635,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "7916:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 629,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "7887:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7887:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 637,
                        "nodeType": "ExpressionStatement",
                        "src": "7887:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "7384:332:2",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7730:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7744:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7736:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7736:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7761:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7753:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7753:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7735:32:2"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7777:0:2"
                  },
                  "scope": 799,
                  "src": "7721:208:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "8303:150:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 647,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "8317:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8336:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8328:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 648,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8328:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8328:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8317:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "8313:89:2",
                        "trueBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "8340:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8388:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8380:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 654,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8380:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8380:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 653,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "8361:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8361:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 659,
                              "nodeType": "RevertStatement",
                              "src": "8354:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "8419:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8436:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8428:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 664,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8428:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8428:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "8440:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "8411:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8411:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "8411:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 640,
                    "nodeType": "StructuredDocumentation",
                    "src": "7935:307:2",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "8256:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8270:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "8262:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8287:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "8279:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8279:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8261:32:2"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8303:0:2"
                  },
                  "scope": 799,
                  "src": "8247:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "9063:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "9082:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "9089:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 685,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "9098:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9105:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 682,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 750,
                            "src": "9073:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9073:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "9073:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "8459:525:2",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8998:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9015:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "9007:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9007:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9030:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "9022:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9022:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9047:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "9039:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9039:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9006:47:2"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9063:0:2"
                  },
                  "scope": 799,
                  "src": "8989:128:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "10047:334:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 702,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "10061:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10078:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10070:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10070:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10070:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10061:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "10057:89:2",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "10082:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10132:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10124:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 709,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10124:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10124:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "10103:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10103:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 714,
                              "nodeType": "RevertStatement",
                              "src": "10096:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 717,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "10159:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10178:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10170:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10170:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10170:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10159:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 731,
                        "nodeType": "IfStatement",
                        "src": "10155:90:2",
                        "trueBody": {
                          "id": 730,
                          "nodeType": "Block",
                          "src": "10182:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10231:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10223:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 724,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10223:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10223:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 723,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "10203:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10203:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 729,
                              "nodeType": "RevertStatement",
                              "src": "10196:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 732,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "10254:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 735,
                              "indexExpression": {
                                "id": 733,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "10266:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10254:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "id": 734,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "10273:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10254:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 737,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "10284:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10254:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "10254:35:2"
                      },
                      {
                        "condition": {
                          "id": 740,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "10303:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "IfStatement",
                        "src": "10299:76:2",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "10314:61:2",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 742,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "10342:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 743,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10349:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 744,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "10358:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 741,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "10333:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10333:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 746,
                              "nodeType": "EmitStatement",
                              "src": "10328:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "9123:821:2",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9958:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9975:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9967:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9967:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9990:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9982:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9982:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10007:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9999:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9999:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "10019:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "10014:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10014:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9966:63:2"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10047:0:2"
                  },
                  "scope": 799,
                  "src": "9949:432:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "10752:388:2",
                    "statements": [
                      {
                        "assignments": [
                          761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 761,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10770:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "10762:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10762:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "10799:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 764,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "10806:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 762,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "10789:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10789:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10762:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 767,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "10828:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10853:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 769,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10853:7:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 768,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10848:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10848:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10862:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10848:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10828:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "IfStatement",
                        "src": "10824:310:2",
                        "trueBody": {
                          "id": 795,
                          "nodeType": "Block",
                          "src": "10867:267:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 774,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "10885:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 775,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 757,
                                  "src": "10904:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10885:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 784,
                              "nodeType": "IfStatement",
                              "src": "10881:130:2",
                              "trueBody": {
                                "id": 783,
                                "nodeType": "Block",
                                "src": "10911:100:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 778,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "10963:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 779,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10972:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 780,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10990:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 777,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 178,
                                        "src": "10936:26:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) pure"
                                        }
                                      },
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10936:60:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 782,
                                    "nodeType": "RevertStatement",
                                    "src": "10929:67:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 794,
                              "nodeType": "UncheckedBlock",
                              "src": "11024:100:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 786,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "11061:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 787,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 755,
                                        "src": "11068:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 788,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "11077:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 789,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "11096:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11077:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11103:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 785,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        690,
                                        750
                                      ],
                                      "referencedDeclaration": 750,
                                      "src": "11052:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11052:57:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 793,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11052:57:2"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "10387:271:2",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10672:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10696:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10688:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10688:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10711:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10703:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10703:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10728:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10720:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10720:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10687:47:2"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10752:0:2"
                  },
                  "scope": 799,
                  "src": "10663:477:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 800,
              "src": "1401:9741:2",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "105:11038:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ]
          },
          "id": 878,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 802,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:3",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 877,
              "linearizedBaseContracts": [
                877
              ],
              "name": "IERC20",
              "nameLocation": "213:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 811,
                  "name": "Transfer",
                  "nameLocation": "395:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "404:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "426:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "446:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:3"
                  },
                  "src": "389:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 812,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 820,
                  "name": "Approval",
                  "nameLocation": "626:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 814,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "635:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 816,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "658:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 818,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "683:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:3"
                  },
                  "src": "620:78:3"
                },
                {
                  "documentation": {
                    "id": 821,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:3",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 826,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:3"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "820:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:3"
                  },
                  "scope": 877,
                  "src": "774:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:3",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 834,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "930:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:3"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "970:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:3"
                  },
                  "scope": 877,
                  "src": "911:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 835,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1221:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1233:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:3"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1266:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:3"
                  },
                  "scope": 877,
                  "src": "1203:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1566:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1581:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:3"
                  },
                  "returnParameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1621:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:3"
                  },
                  "scope": 877,
                  "src": "1547:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2325:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2342:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:3"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2375:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:3"
                  },
                  "scope": 877,
                  "src": "2308:73:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 876,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2711:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2725:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2737:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:3"
                  },
                  "returnParameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2770:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:3"
                  },
                  "scope": 877,
                  "src": "2689:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 878,
              "src": "203:2575:3",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "106:2673:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 904,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 879,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 881,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 904,
              "sourceUnit": 878,
              "src": "151:37:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 880,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "159:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 883,
                    "name": "IERC20",
                    "nameLocations": [
                      "305:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "305:6:4"
                  },
                  "id": 884,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 882,
                "nodeType": "StructuredDocumentation",
                "src": "190:86:4",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard."
              },
              "fullyImplemented": false,
              "id": 903,
              "linearizedBaseContracts": [
                903,
                877
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 890,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:4"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "416:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:4"
                  },
                  "scope": 903,
                  "src": "377:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:4"
                  },
                  "returnParameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "539:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:4"
                  },
                  "scope": 903,
                  "src": "498:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 897,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 902,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:4"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "673:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:4"
                  },
                  "scope": 903,
                  "src": "630:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 904,
              "src": "277:405:4",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "125:558:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              933
            ]
          },
          "id": 934,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 905,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 906,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 933,
              "linearizedBaseContracts": [
                933
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 911,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 910,
                        "id": 913,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 933,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 923,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 919,
                        "id": 922,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 924,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 933,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 928,
                        "id": 930,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 933,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 934,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1002
            ]
          },
          "id": 1003,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 935,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:6"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 936,
                "nodeType": "StructuredDocumentation",
                "src": "135:750:6",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1002,
              "linearizedBaseContracts": [
                1002
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "904:15:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 939,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1699:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "1674:40:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1713:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 942,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1745:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "1720:36:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1755:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 944,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1779:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "1763:23:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 945,
                    "nodeType": "StructuredDocumentation",
                    "src": "1793:52:6",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 947,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "1856:28:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1884:2:6"
                  },
                  "src": "1850:37:6"
                },
                {
                  "body": {
                    "id": 954,
                    "nodeType": "Block",
                    "src": "1907:38:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 950,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 944,
                            "src": "1917:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 951,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "1927:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1917:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 953,
                        "nodeType": "ExpressionStatement",
                        "src": "1917:21:6"
                      }
                    ]
                  },
                  "id": 955,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 948,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:6"
                  },
                  "returnParameters": {
                    "id": 949,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1907:0:6"
                  },
                  "scope": 1002,
                  "src": "1893:52:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 965,
                    "nodeType": "Block",
                    "src": "2346:79:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 958,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 982,
                            "src": "2356:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2356:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 960,
                        "nodeType": "ExpressionStatement",
                        "src": "2356:21:6"
                      },
                      {
                        "id": 961,
                        "nodeType": "PlaceholderStatement",
                        "src": "2387:1:6"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 962,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "2398:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 964,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:20:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 956,
                    "nodeType": "StructuredDocumentation",
                    "src": "1951:366:6",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 966,
                  "name": "nonReentrant",
                  "nameLocation": "2331:12:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2343:2:6"
                  },
                  "src": "2322:103:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 981,
                    "nodeType": "Block",
                    "src": "2470:268:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 969,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 944,
                            "src": "2558:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 970,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "2569:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2558:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 976,
                        "nodeType": "IfStatement",
                        "src": "2554:86:6",
                        "trueBody": {
                          "id": 975,
                          "nodeType": "Block",
                          "src": "2578:62:6",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 972,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 947,
                                  "src": "2599:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2599:30:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 974,
                              "nodeType": "RevertStatement",
                              "src": "2592:37:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 977,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 944,
                            "src": "2714:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 978,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "2724:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2714:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 980,
                        "nodeType": "ExpressionStatement",
                        "src": "2714:17:6"
                      }
                    ]
                  },
                  "id": 982,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2440:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 967,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2459:2:6"
                  },
                  "returnParameters": {
                    "id": 968,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:6"
                  },
                  "scope": 1002,
                  "src": "2431:307:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 989,
                    "nodeType": "Block",
                    "src": "2782:170:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 985,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 944,
                            "src": "2924:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 986,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "2934:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2924:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 988,
                        "nodeType": "ExpressionStatement",
                        "src": "2924:21:6"
                      }
                    ]
                  },
                  "id": 990,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2753:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 983,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2771:2:6"
                  },
                  "returnParameters": {
                    "id": 984,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2782:0:6"
                  },
                  "scope": 1002,
                  "src": "2744:208:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1000,
                    "nodeType": "Block",
                    "src": "3195:42:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 996,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 944,
                            "src": "3212:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 997,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "3223:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3212:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 995,
                        "id": 999,
                        "nodeType": "Return",
                        "src": "3205:25:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 991,
                    "nodeType": "StructuredDocumentation",
                    "src": "2958:168:6",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1001,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3140:23:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3163:2:6"
                  },
                  "returnParameters": {
                    "id": 995,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 994,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1001,
                        "src": "3189:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 993,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3189:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3188:6:6"
                  },
                  "scope": 1002,
                  "src": "3131:106:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1003,
              "src": "886:2353:6",
              "usedErrors": [
                947
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3131:6"
        },
        "id": 6
      },
      "contracts/JumpCrossCoupon.sol": {
        "ast": {
          "absolutePath": "contracts/JumpCrossCoupon.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ],
            "JumpCrossCoupon": [
              1361
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1002
            ]
          },
          "id": 1362,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1004,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".25"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1005,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1362,
              "sourceUnit": 148,
              "src": "58:52:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1006,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1362,
              "sourceUnit": 1003,
              "src": "111:59:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1007,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1362,
              "sourceUnit": 800,
              "src": "171:55:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1009,
                    "name": "ERC20",
                    "nameLocations": [
                      "832:5:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "832:5:7"
                  },
                  "id": 1010,
                  "nodeType": "InheritanceSpecifier",
                  "src": "832:5:7"
                },
                {
                  "baseName": {
                    "id": 1011,
                    "name": "Ownable",
                    "nameLocations": [
                      "839:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "839:7:7"
                  },
                  "id": 1012,
                  "nodeType": "InheritanceSpecifier",
                  "src": "839:7:7"
                },
                {
                  "baseName": {
                    "id": 1013,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "848:15:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1002,
                    "src": "848:15:7"
                  },
                  "id": 1014,
                  "nodeType": "InheritanceSpecifier",
                  "src": "848:15:7"
                }
              ],
              "canonicalName": "JumpCrossCoupon",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1008,
                "nodeType": "StructuredDocumentation",
                "src": "637:167:7",
                "text": "@title JCC(JumpCrossCoupon)-ERC20\n @author 0xmmq\n @notice You can use this contract to convert or redeem the JumpCross game coupon to play or exit the game."
              },
              "fullyImplemented": true,
              "id": 1361,
              "linearizedBaseContracts": [
                1361,
                1002,
                147,
                799,
                189,
                903,
                877,
                933
              ],
              "name": "JumpCrossCoupon",
              "nameLocation": "813:15:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "14a8bd0d",
                  "id": 1017,
                  "mutability": "constant",
                  "name": "EXCHANGE_RATE",
                  "nameLocation": "894:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "870:54:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "302e303030303134",
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "910:14:7",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_14000000000000_by_1",
                      "typeString": "int_const 14000000000000"
                    },
                    "value": "0.000014"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "01a1137b",
                  "id": 1020,
                  "mutability": "constant",
                  "name": "PROTOCOL_FEE_UPPER_LIMIT",
                  "nameLocation": "954:24:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "930:61:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "302e3031",
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "981:10:7",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "0.01"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1021,
                    "nodeType": "StructuredDocumentation",
                    "src": "998:293:7",
                    "text": "@notice The following variables are used to calculate the protocol fee.\n The fomula is: fee = (userSentEth * protocolFeeFactor) / 10^protocolFeeScale\n Pawn fee range: [1e-18, Min(9%, 0.01 eth)].\n Redeem fee range: [1e-18, Min(45%, 0.01 * _protocolExitMultiplier eth)]."
                  },
                  "functionSelector": "11e3bdde",
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "protocolFeeFactor",
                  "nameLocation": "1311:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "1296:32:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "982b5047",
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "protocolFeeScale",
                  "nameLocation": "1349:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "1334:31:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "72f90a9d",
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "protocolExitMultiplier",
                  "nameLocation": "1386:22:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "1371:37:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7af3816c",
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "protocolRevenue",
                  "nameLocation": "1430:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "1415:30:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "errorSelector": "8cdd9083",
                  "id": 1035,
                  "name": "InsufficientFundsError",
                  "nameLocation": "1458:22:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1031,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "1489:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "1481:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1481:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "inputed",
                        "nameLocation": "1507:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "1499:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1499:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1480:35:7"
                  },
                  "src": "1452:64:7"
                },
                {
                  "errorSelector": "ec44dcbd",
                  "id": 1039,
                  "name": "InvalidExchangeAmountError",
                  "nameLocation": "1527:26:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1038,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1037,
                        "mutability": "mutable",
                        "name": "inputed",
                        "nameLocation": "1562:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "1554:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1554:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1553:17:7"
                  },
                  "src": "1521:50:7"
                },
                {
                  "errorSelector": "60b9afa6",
                  "id": 1043,
                  "name": "SetProtocolFeeError",
                  "nameLocation": "1582:19:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1042,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1041,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "1609:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1043,
                        "src": "1602:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1602:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1601:16:7"
                  },
                  "src": "1576:42:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b03cba1fd26bee931da9fac9c0a6b1ec951fa21622fb17480acb831a2a83ed6d",
                  "id": 1051,
                  "name": "UpdateProtocolFee",
                  "nameLocation": "1630:17:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "protocolFeeFactor",
                        "nameLocation": "1665:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "1657:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1657:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "protocolFeeScale",
                        "nameLocation": "1700:16:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "1692:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1692:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "protocolExitMultiplier",
                        "nameLocation": "1734:22:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "1726:30:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1726:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1647:115:7"
                  },
                  "src": "1624:139:7"
                },
                {
                  "body": {
                    "id": 1076,
                    "nodeType": "Block",
                    "src": "1837:110:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1062,
                            "name": "protocolFeeFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1023,
                            "src": "1847:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "38",
                            "id": 1063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1867:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "1847:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1065,
                        "nodeType": "ExpressionStatement",
                        "src": "1847:21:7"
                      },
                      {
                        "expression": {
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1066,
                            "name": "protocolFeeScale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "1878:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "id": 1069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1897:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "33",
                              "id": 1068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1903:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "src": "1897:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            }
                          },
                          "src": "1878:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1071,
                        "nodeType": "ExpressionStatement",
                        "src": "1878:26:7"
                      },
                      {
                        "expression": {
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1072,
                            "name": "protocolExitMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "1914:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1939:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1914:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1075,
                        "nodeType": "ExpressionStatement",
                        "src": "1914:26:7"
                      }
                    ]
                  },
                  "id": 1077,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4a756d7043726f7373436f75706f6e",
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1789:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_090d7548f3a995c18f21b68bc619acc155e39f36656ba2d04130f2dbe1ba5685",
                            "typeString": "literal_string \"JumpCrossCoupon\""
                          },
                          "value": "JumpCrossCoupon"
                        },
                        {
                          "hexValue": "4a4343",
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1808:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d7759bda96cd6028f99ad3c8a2f2c2656886430f619722f8b7da58508bf03cab",
                            "typeString": "literal_string \"JCC\""
                          },
                          "value": "JCC"
                        }
                      ],
                      "id": 1056,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1053,
                        "name": "ERC20",
                        "nameLocations": [
                          "1783:5:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "1783:5:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1783:31:7"
                    },
                    {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1058,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "1823:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1823:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1060,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1057,
                        "name": "Ownable",
                        "nameLocations": [
                          "1815:7:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1815:7:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1815:21:7"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1052,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1780:2:7"
                  },
                  "returnParameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1837:0:7"
                  },
                  "scope": 1361,
                  "src": "1769:178:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    363
                  ],
                  "body": {
                    "id": 1086,
                    "nodeType": "Block",
                    "src": "2162:25:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2179:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1083,
                        "id": 1085,
                        "nodeType": "Return",
                        "src": "2172:8:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1078,
                    "nodeType": "StructuredDocumentation",
                    "src": "1999:101:7",
                    "text": "@notice Inform the user of the decimal precision of this token.\n @return Decimal precision"
                  },
                  "functionSelector": "313ce567",
                  "id": 1087,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2114:8:7",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1080,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2137:8:7"
                  },
                  "parameters": {
                    "id": 1079,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2122:2:7"
                  },
                  "returnParameters": {
                    "id": 1083,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1082,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "2155:5:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2155:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2154:7:7"
                  },
                  "scope": 1361,
                  "src": "2105:82:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1163,
                    "nodeType": "Block",
                    "src": "2692:586:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1093,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "2706:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2716:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2706:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1101,
                        "nodeType": "IfStatement",
                        "src": "2702:83:7",
                        "trueBody": {
                          "id": 1100,
                          "nodeType": "Block",
                          "src": "2719:66:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1097,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1090,
                                    "src": "2767:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1096,
                                  "name": "InvalidExchangeAmountError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1039,
                                  "src": "2740:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) pure"
                                  }
                                },
                                "id": 1098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2740:34:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1099,
                              "nodeType": "RevertStatement",
                              "src": "2733:41:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1103
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1103,
                            "mutability": "mutable",
                            "name": "ethAmount",
                            "nameLocation": "2803:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "2795:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1102,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2795:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1112,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1104,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1090,
                                    "src": "2816:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1105,
                                    "name": "EXCHANGE_RATE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1017,
                                    "src": "2825:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2816:22:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2841:7:7",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                },
                                "src": "2816:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1109,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2815:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2852:7:7",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          "src": "2815:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2795:64:7"
                      },
                      {
                        "assignments": [
                          1114
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1114,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "2877:3:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "2869:11:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1113,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2869:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1121,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1115,
                                  "name": "ethAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1103,
                                  "src": "2884:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1116,
                                  "name": "protocolFeeFactor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1023,
                                  "src": "2896:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2884:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1118,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2883:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1119,
                            "name": "protocolFeeScale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "2917:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2883:50:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2869:64:7"
                      },
                      {
                        "assignments": [
                          1123
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1123,
                            "mutability": "mutable",
                            "name": "total",
                            "nameLocation": "2951:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "2943:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1122,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2943:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1125,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2959:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2943:17:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1126,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "2975:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1127,
                            "name": "PROTOCOL_FEE_UPPER_LIMIT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "2981:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2975:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1134,
                        "nodeType": "IfStatement",
                        "src": "2971:91:7",
                        "trueBody": {
                          "id": 1133,
                          "nodeType": "Block",
                          "src": "3007:55:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1129,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1114,
                                  "src": "3021:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1130,
                                  "name": "PROTOCOL_FEE_UPPER_LIMIT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1020,
                                  "src": "3027:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3021:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1132,
                              "nodeType": "ExpressionStatement",
                              "src": "3021:30:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1135,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "3072:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1136,
                              "name": "ethAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1103,
                              "src": "3080:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1137,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1114,
                              "src": "3092:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3080:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3072:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "3072:23:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1141,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3110:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3114:5:7",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3110:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1143,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "3122:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3110:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1152,
                        "nodeType": "IfStatement",
                        "src": "3106:95:7",
                        "trueBody": {
                          "id": 1151,
                          "nodeType": "Block",
                          "src": "3129:72:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1146,
                                    "name": "total",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1123,
                                    "src": "3173:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1147,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3180:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1148,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3184:5:7",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "3180:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1145,
                                  "name": "InsufficientFundsError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1035,
                                  "src": "3150:22:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) pure"
                                  }
                                },
                                "id": 1149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3150:40:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1150,
                              "nodeType": "RevertStatement",
                              "src": "3143:47:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1153,
                            "name": "protocolRevenue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "3211:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1154,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "3230:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3211:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1156,
                        "nodeType": "ExpressionStatement",
                        "src": "3211:22:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1158,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "3250:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3250:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1160,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "3264:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1157,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "3244:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3244:27:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1162,
                        "nodeType": "ExpressionStatement",
                        "src": "3244:27:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1088,
                    "nodeType": "StructuredDocumentation",
                    "src": "2245:395:7",
                    "text": "@notice Users specify the amount of JCC tokens they expect to receive.\n After a series of checks, the contract will send JCC tokens to the user\n by exchanging ETH for JCC tokens at a fixed exchange rate.\n Users have to send extra protocol fee in order for this function to execute successfully.\n @param amount The number of JCC tokens that users expect to receive"
                  },
                  "functionSelector": "fb49b207",
                  "id": 1164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pawn",
                  "nameLocation": "2654:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2667:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1164,
                        "src": "2659:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2659:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2658:16:7"
                  },
                  "returnParameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2692:0:7"
                  },
                  "scope": 1361,
                  "src": "2645:633:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1248,
                    "nodeType": "Block",
                    "src": "3583:1108:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1172,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1167,
                            "src": "3597:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3607:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3597:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1180,
                        "nodeType": "IfStatement",
                        "src": "3593:83:7",
                        "trueBody": {
                          "id": 1179,
                          "nodeType": "Block",
                          "src": "3610:66:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1176,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "3658:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1175,
                                  "name": "InvalidExchangeAmountError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1039,
                                  "src": "3631:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) pure"
                                  }
                                },
                                "id": 1177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3631:34:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1178,
                              "nodeType": "RevertStatement",
                              "src": "3624:41:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1182,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "3692:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3692:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1184,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1167,
                              "src": "3706:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1181,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "3686:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3686:27:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1186,
                        "nodeType": "ExpressionStatement",
                        "src": "3686:27:7"
                      },
                      {
                        "assignments": [
                          1188
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1188,
                            "mutability": "mutable",
                            "name": "ethAmount",
                            "nameLocation": "3732:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "3724:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1187,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3724:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1197,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1189,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "3745:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1190,
                                    "name": "EXCHANGE_RATE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1017,
                                    "src": "3754:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3745:22:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3770:7:7",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                },
                                "src": "3745:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1194,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3744:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3781:7:7",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          "src": "3744:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3724:64:7"
                      },
                      {
                        "assignments": [
                          1199
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1199,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "3806:3:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "3798:11:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1198,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3798:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1208,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1200,
                                    "name": "ethAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1188,
                                    "src": "3813:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1201,
                                    "name": "protocolFeeFactor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1023,
                                    "src": "3825:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3813:29:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1203,
                                  "name": "protocolExitMultiplier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "3845:22:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3813:54:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1205,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3812:56:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1206,
                            "name": "protocolFeeScale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "3883:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3812:87:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3798:101:7"
                      },
                      {
                        "assignments": [
                          1210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1210,
                            "mutability": "mutable",
                            "name": "total",
                            "nameLocation": "3917:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "3909:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1209,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3909:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1212,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3925:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3909:17:7"
                      },
                      {
                        "assignments": [
                          1214
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1214,
                            "mutability": "mutable",
                            "name": "feeUpperLimitForRedemption",
                            "nameLocation": "3945:26:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "3937:34:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1213,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3937:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1218,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1215,
                            "name": "PROTOCOL_FEE_UPPER_LIMIT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "3974:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1216,
                            "name": "protocolExitMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "4013:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3974:61:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3937:98:7"
                      },
                      {
                        "id": 1234,
                        "nodeType": "UncheckedBlock",
                        "src": "4429:175:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1219,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "4457:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 1220,
                                "name": "feeUpperLimitForRedemption",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1214,
                                "src": "4463:26:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4457:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1227,
                            "nodeType": "IfStatement",
                            "src": "4453:103:7",
                            "trueBody": {
                              "id": 1226,
                              "nodeType": "Block",
                              "src": "4491:65:7",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1222,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1199,
                                      "src": "4509:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 1223,
                                      "name": "feeUpperLimitForRedemption",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1214,
                                      "src": "4515:26:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4509:32:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1225,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4509:32:7"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1228,
                                "name": "total",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "4570:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1229,
                                  "name": "ethAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1188,
                                  "src": "4578:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1230,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1199,
                                  "src": "4590:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4578:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4570:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1233,
                            "nodeType": "ExpressionStatement",
                            "src": "4570:23:7"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1235,
                            "name": "protocolRevenue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "4614:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1236,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "4633:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4614:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1238,
                        "nodeType": "ExpressionStatement",
                        "src": "4614:22:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1245,
                              "name": "total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "4678:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1241,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 915,
                                    "src": "4655:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4655:12:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4647:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1239,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4647:8:7",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4647:21:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4669:8:7",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "4647:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4647:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1247,
                        "nodeType": "ExpressionStatement",
                        "src": "4647:37:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1165,
                    "nodeType": "StructuredDocumentation",
                    "src": "3284:240:7",
                    "text": "@notice Users specify the amount of JCC tokens they expect to swap for ETH.\n Users have to send extra protocol fee in order for this function to execute successfully.\n @param amount The number of JCC tokens to swap for ETH"
                  },
                  "functionSelector": "db006a75",
                  "id": 1249,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1170,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1169,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "3570:12:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 966,
                        "src": "3570:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3570:12:7"
                    }
                  ],
                  "name": "redeem",
                  "nameLocation": "3538:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1167,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3553:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "3545:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3545:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3544:16:7"
                  },
                  "returnParameters": {
                    "id": 1171,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3583:0:7"
                  },
                  "scope": 1361,
                  "src": "3529:1162:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1281,
                    "nodeType": "Block",
                    "src": "5309:310:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1262,
                              "name": "_protocolFeeFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1252,
                              "src": "5351:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1263,
                              "name": "_protocolFeeDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "5383:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1264,
                              "name": "_protocolExitMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1256,
                              "src": "5417:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1261,
                            "name": "_updateProtocolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1360,
                            "src": "5319:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5319:131:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1266,
                        "nodeType": "ExpressionStatement",
                        "src": "5319:131:7"
                      },
                      {
                        "expression": {
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1267,
                            "name": "protocolFeeFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1023,
                            "src": "5461:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1268,
                            "name": "_protocolFeeFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "5481:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5461:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "5461:38:7"
                      },
                      {
                        "expression": {
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1271,
                            "name": "protocolFeeScale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "5509:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5528:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 1273,
                              "name": "_protocolFeeDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "5534:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5528:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5509:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1276,
                        "nodeType": "ExpressionStatement",
                        "src": "5509:45:7"
                      },
                      {
                        "expression": {
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1277,
                            "name": "protocolExitMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "5564:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1278,
                            "name": "_protocolExitMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "5589:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5564:48:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1280,
                        "nodeType": "ExpressionStatement",
                        "src": "5564:48:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1250,
                    "nodeType": "StructuredDocumentation",
                    "src": "4740:397:7",
                    "text": "@notice Update the protocol fee parameters\n @dev Parameter values must comply with the range defined in advance to ensure that the protocol\n fee is within a reasonable range\n @param _protocolFeeFactor Protocol fee numerator\n @param _protocolFeeDecimals Protocol fee denominator decimals\n @param _protocolExitMultiplier Exit multiplier for protocol protection"
                  },
                  "functionSelector": "47e75cfe",
                  "id": 1282,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1259,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1258,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5299:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5299:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5299:9:7"
                    }
                  ],
                  "name": "updateProtocolFee",
                  "nameLocation": "5151:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1252,
                        "mutability": "mutable",
                        "name": "_protocolFeeFactor",
                        "nameLocation": "5186:18:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1282,
                        "src": "5178:26:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1251,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5178:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1254,
                        "mutability": "mutable",
                        "name": "_protocolFeeDecimals",
                        "nameLocation": "5222:20:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1282,
                        "src": "5214:28:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5214:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "_protocolExitMultiplier",
                        "nameLocation": "5260:23:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1282,
                        "src": "5252:31:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5252:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5168:121:7"
                  },
                  "returnParameters": {
                    "id": 1260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5309:0:7"
                  },
                  "scope": 1361,
                  "src": "5142:477:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1304,
                    "nodeType": "Block",
                    "src": "5718:146:7",
                    "statements": [
                      {
                        "assignments": [
                          1288
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1288,
                            "mutability": "mutable",
                            "name": "_protocolRevenue",
                            "nameLocation": "5736:16:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1304,
                            "src": "5728:24:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1287,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5728:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1290,
                        "initialValue": {
                          "id": 1289,
                          "name": "protocolRevenue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "5755:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5728:42:7"
                      },
                      {
                        "expression": {
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1291,
                            "name": "protocolRevenue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "5780:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5798:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5780:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "5780:19:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1301,
                              "name": "_protocolRevenue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1288,
                              "src": "5840:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1297,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 915,
                                    "src": "5817:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5817:12:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5809:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1295,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5809:8:7",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5809:21:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5831:8:7",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5809:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1303,
                        "nodeType": "ExpressionStatement",
                        "src": "5809:48:7"
                      }
                    ]
                  },
                  "functionSelector": "564f4f76",
                  "id": 1305,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1285,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1284,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5708:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5708:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5708:9:7"
                    }
                  ],
                  "name": "claimRevenue",
                  "nameLocation": "5684:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1283,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5696:2:7"
                  },
                  "returnParameters": {
                    "id": 1286,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5718:0:7"
                  },
                  "scope": 1361,
                  "src": "5675:189:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1359,
                    "nodeType": "Block",
                    "src": "6453:612:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1314,
                              "name": "_protocolFeeFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1307,
                              "src": "6467:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6488:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6467:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1317,
                              "name": "_protocolFeeFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1307,
                              "src": "6493:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "39",
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6514:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            },
                            "src": "6493:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6467:48:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1326,
                        "nodeType": "IfStatement",
                        "src": "6463:136:7",
                        "trueBody": {
                          "id": 1325,
                          "nodeType": "Block",
                          "src": "6517:82:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "hexValue": "496e76616c69642070726f746f636f6c2066656520666163746f72",
                                    "id": 1322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6558:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0f8b1980f48fa75071ee6c49ec20fad42b0a50c9de1d75b15eb3fdd1c5fe125a",
                                      "typeString": "literal_string \"Invalid protocol fee factor\""
                                    },
                                    "value": "Invalid protocol fee factor"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_0f8b1980f48fa75071ee6c49ec20fad42b0a50c9de1d75b15eb3fdd1c5fe125a",
                                      "typeString": "literal_string \"Invalid protocol fee factor\""
                                    }
                                  ],
                                  "id": 1321,
                                  "name": "SetProtocolFeeError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1043,
                                  "src": "6538:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6538:50:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1324,
                              "nodeType": "RevertStatement",
                              "src": "6531:57:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1327,
                              "name": "_protocolFeeDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1309,
                              "src": "6613:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6636:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "6613:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1330,
                              "name": "_protocolFeeDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1309,
                              "src": "6641:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 1331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6664:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "6641:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6613:53:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1339,
                        "nodeType": "IfStatement",
                        "src": "6609:143:7",
                        "trueBody": {
                          "id": 1338,
                          "nodeType": "Block",
                          "src": "6668:84:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "hexValue": "496e76616c69642070726f746f636f6c2066656520646563696d616c73",
                                    "id": 1335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6709:31:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_de2705891d4e97fb2694e2778382fbb891ffcbb2ceee5147388962b94a59f294",
                                      "typeString": "literal_string \"Invalid protocol fee decimals\""
                                    },
                                    "value": "Invalid protocol fee decimals"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_de2705891d4e97fb2694e2778382fbb891ffcbb2ceee5147388962b94a59f294",
                                      "typeString": "literal_string \"Invalid protocol fee decimals\""
                                    }
                                  ],
                                  "id": 1334,
                                  "name": "SetProtocolFeeError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1043,
                                  "src": "6689:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6689:52:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1337,
                              "nodeType": "RevertStatement",
                              "src": "6682:59:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1340,
                              "name": "_protocolExitMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1311,
                              "src": "6766:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6792:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6766:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1343,
                              "name": "_protocolExitMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1311,
                              "src": "6797:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 1344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6823:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "6797:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6766:58:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1352,
                        "nodeType": "IfStatement",
                        "src": "6762:151:7",
                        "trueBody": {
                          "id": 1351,
                          "nodeType": "Block",
                          "src": "6826:87:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "hexValue": "496e76616c69642070726f746f636f6c2065786974206d756c7469706c696572",
                                    "id": 1348,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6867:34:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0ac4eb53c5ef927cab2843d4ff7bb6b429b04c56a7eb9ff18f274a79b549fa24",
                                      "typeString": "literal_string \"Invalid protocol exit multiplier\""
                                    },
                                    "value": "Invalid protocol exit multiplier"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_0ac4eb53c5ef927cab2843d4ff7bb6b429b04c56a7eb9ff18f274a79b549fa24",
                                      "typeString": "literal_string \"Invalid protocol exit multiplier\""
                                    }
                                  ],
                                  "id": 1347,
                                  "name": "SetProtocolFeeError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1043,
                                  "src": "6847:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6847:55:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1350,
                              "nodeType": "RevertStatement",
                              "src": "6840:62:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1354,
                              "name": "_protocolFeeFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1307,
                              "src": "6959:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1355,
                              "name": "_protocolFeeDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1309,
                              "src": "6991:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1356,
                              "name": "_protocolExitMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1311,
                              "src": "7025:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1353,
                            "name": "UpdateProtocolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "6928:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6928:130:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1358,
                        "nodeType": "EmitStatement",
                        "src": "6923:135:7"
                      }
                    ]
                  },
                  "id": 1360,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_updateProtocolFee",
                  "nameLocation": "6304:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1307,
                        "mutability": "mutable",
                        "name": "_protocolFeeFactor",
                        "nameLocation": "6340:18:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "6332:26:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1306,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6332:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "_protocolFeeDecimals",
                        "nameLocation": "6376:20:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "6368:28:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6368:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "_protocolExitMultiplier",
                        "nameLocation": "6414:23:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "6406:31:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6406:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6322:121:7"
                  },
                  "returnParameters": {
                    "id": 1313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6453:0:7"
                  },
                  "scope": 1361,
                  "src": "6295:770:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1362,
              "src": "804:6263:7",
              "usedErrors": [
                13,
                18,
                159,
                164,
                169,
                178,
                183,
                188,
                947,
                1035,
                1039,
                1043
              ],
              "usedEvents": [
                24,
                811,
                820,
                1051
              ]
            }
          ],
          "src": "32:7036:7"
        },
        "id": 7
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}"
        }
      },
      "contracts/JumpCrossCoupon.sol": {
        "JumpCrossCoupon": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputed",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientFundsError",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "inputed",
                  "type": "uint256"
                }
              ],
              "name": "InvalidExchangeAmountError",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "message",
                  "type": "string"
                }
              ],
              "name": "SetProtocolFeeError",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "protocolFeeFactor",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "protocolFeeScale",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "protocolExitMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "UpdateProtocolFee",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "EXCHANGE_RATE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PROTOCOL_FEE_UPPER_LIMIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimRevenue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "pawn",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "protocolExitMultiplier",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "protocolFeeFactor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "protocolFeeScale",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "protocolRevenue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "redeem",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_protocolFeeFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_protocolFeeDecimals",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_protocolExitMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "updateProtocolFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1077": {
                  "entryPoint": null,
                  "id": 1077,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_336": {
                  "entryPoint": null,
                  "id": 336,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_955": {
                  "entryPoint": null,
                  "id": 955,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_915": {
                  "entryPoint": null,
                  "id": 915,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 198,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 355,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 431,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 299,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 279,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:2906:8",
                    "nodeType": "YulBlock",
                    "src": "0:2906:8",
                    "statements": [
                      {
                        "nativeSrc": "6:3:8",
                        "nodeType": "YulBlock",
                        "src": "6:3:8",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "46:95:8",
                          "nodeType": "YulBlock",
                          "src": "46:95:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "63:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "63:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "70:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "70:3:8",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "75:10:8",
                                        "nodeType": "YulLiteral",
                                        "src": "75:10:8",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "66:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "66:3:8"
                                    },
                                    "nativeSrc": "66:20:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "66:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "56:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "56:6:8"
                                },
                                "nativeSrc": "56:31:8",
                                "nodeType": "YulFunctionCall",
                                "src": "56:31:8"
                              },
                              "nativeSrc": "56:31:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "56:31:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "103:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "103:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "106:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "106:4:8",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "96:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:6:8"
                                },
                                "nativeSrc": "96:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "96:15:8"
                              },
                              "nativeSrc": "96:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "96:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "127:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "127:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "130:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "130:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "120:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:6:8"
                                },
                                "nativeSrc": "120:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "120:15:8"
                              },
                              "nativeSrc": "120:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "120:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "14:127:8",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14:127:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "201:325:8",
                          "nodeType": "YulBlock",
                          "src": "201:325:8",
                          "statements": [
                            {
                              "nativeSrc": "211:22:8",
                              "nodeType": "YulAssignment",
                              "src": "211:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "225:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "225:1:8",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "228:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "228:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "221:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "221:3:8"
                                },
                                "nativeSrc": "221:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "221:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "211:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "211:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "242:38:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "242:38:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "272:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "272:4:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "278:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "278:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "268:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "268:3:8"
                                },
                                "nativeSrc": "268:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "268:12:8"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "246:18:8",
                                  "nodeType": "YulTypedName",
                                  "src": "246:18:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "319:31:8",
                                "nodeType": "YulBlock",
                                "src": "319:31:8",
                                "statements": [
                                  {
                                    "nativeSrc": "321:27:8",
                                    "nodeType": "YulAssignment",
                                    "src": "321:27:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "335:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "335:6:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "343:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "343:4:8",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "331:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "331:3:8"
                                      },
                                      "nativeSrc": "331:17:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "331:17:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "321:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "321:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "299:18:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "299:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "292:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "292:6:8"
                                },
                                "nativeSrc": "292:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "292:26:8"
                              },
                              "nativeSrc": "289:61:8",
                              "nodeType": "YulIf",
                              "src": "289:61:8"
                            },
                            {
                              "body": {
                                "nativeSrc": "409:111:8",
                                "nodeType": "YulBlock",
                                "src": "409:111:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "430:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "430:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "437:3:8",
                                              "nodeType": "YulLiteral",
                                              "src": "437:3:8",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "442:10:8",
                                              "nodeType": "YulLiteral",
                                              "src": "442:10:8",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "433:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "433:3:8"
                                          },
                                          "nativeSrc": "433:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "433:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "423:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "423:6:8"
                                      },
                                      "nativeSrc": "423:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "423:31:8"
                                    },
                                    "nativeSrc": "423:31:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "423:31:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "474:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "474:1:8",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "477:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "477:4:8",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "467:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "467:6:8"
                                      },
                                      "nativeSrc": "467:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "467:15:8"
                                    },
                                    "nativeSrc": "467:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "467:15:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "502:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "502:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "505:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "505:4:8",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "495:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "495:6:8"
                                      },
                                      "nativeSrc": "495:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "495:15:8"
                                    },
                                    "nativeSrc": "495:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "495:15:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "365:18:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "365:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "388:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "388:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "396:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "396:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "385:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "385:2:8"
                                    },
                                    "nativeSrc": "385:14:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "385:14:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "362:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:2:8"
                                },
                                "nativeSrc": "362:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "362:38:8"
                              },
                              "nativeSrc": "359:161:8",
                              "nodeType": "YulIf",
                              "src": "359:161:8"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "146:380:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "181:4:8",
                            "nodeType": "YulTypedName",
                            "src": "181:4:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "190:6:8",
                            "nodeType": "YulTypedName",
                            "src": "190:6:8",
                            "type": ""
                          }
                        ],
                        "src": "146:380:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "587:65:8",
                          "nodeType": "YulBlock",
                          "src": "587:65:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "604:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "604:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "607:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "607:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "597:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "597:6:8"
                                },
                                "nativeSrc": "597:14:8",
                                "nodeType": "YulFunctionCall",
                                "src": "597:14:8"
                              },
                              "nativeSrc": "597:14:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "597:14:8"
                            },
                            {
                              "nativeSrc": "620:26:8",
                              "nodeType": "YulAssignment",
                              "src": "620:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "638:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "638:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "641:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "641:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "628:9:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "628:9:8"
                                },
                                "nativeSrc": "628:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "628:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "620:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "620:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "531:121:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "570:3:8",
                            "nodeType": "YulTypedName",
                            "src": "570:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "578:4:8",
                            "nodeType": "YulTypedName",
                            "src": "578:4:8",
                            "type": ""
                          }
                        ],
                        "src": "531:121:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "738:437:8",
                          "nodeType": "YulBlock",
                          "src": "738:437:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "771:398:8",
                                "nodeType": "YulBlock",
                                "src": "771:398:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "792:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "792:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "795:5:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "795:5:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "785:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "785:6:8"
                                      },
                                      "nativeSrc": "785:16:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "785:16:8"
                                    },
                                    "nativeSrc": "785:16:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "785:16:8"
                                  },
                                  {
                                    "nativeSrc": "814:30:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "814:30:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "836:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "836:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "839:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "839:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "826:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "826:9:8"
                                      },
                                      "nativeSrc": "826:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "826:18:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "818:4:8",
                                        "nodeType": "YulTypedName",
                                        "src": "818:4:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "857:57:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "857:57:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "880:4:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "880:4:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "890:1:8",
                                              "nodeType": "YulLiteral",
                                              "src": "890:1:8",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "897:10:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "897:10:8"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "909:2:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "909:2:8",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "893:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "893:3:8"
                                              },
                                              "nativeSrc": "893:19:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "893:19:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "886:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "886:3:8"
                                          },
                                          "nativeSrc": "886:27:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "886:27:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "876:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "876:3:8"
                                      },
                                      "nativeSrc": "876:38:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "876:38:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "861:11:8",
                                        "nodeType": "YulTypedName",
                                        "src": "861:11:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "951:23:8",
                                      "nodeType": "YulBlock",
                                      "src": "951:23:8",
                                      "statements": [
                                        {
                                          "nativeSrc": "953:19:8",
                                          "nodeType": "YulAssignment",
                                          "src": "953:19:8",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "968:4:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "968:4:8"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "953:11:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "953:11:8"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "933:10:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "933:10:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "945:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "945:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "930:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "930:2:8"
                                      },
                                      "nativeSrc": "930:20:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "930:20:8"
                                    },
                                    "nativeSrc": "927:47:8",
                                    "nodeType": "YulIf",
                                    "src": "927:47:8"
                                  },
                                  {
                                    "nativeSrc": "987:41:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "987:41:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "1001:4:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1001:4:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1011:1:8",
                                              "nodeType": "YulLiteral",
                                              "src": "1011:1:8",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "1018:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1018:3:8"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1023:2:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1023:2:8",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "1014:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "1014:3:8"
                                              },
                                              "nativeSrc": "1014:12:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1014:12:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "1007:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1007:3:8"
                                          },
                                          "nativeSrc": "1007:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1007:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "997:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "997:3:8"
                                      },
                                      "nativeSrc": "997:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "997:31:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "991:2:8",
                                        "nodeType": "YulTypedName",
                                        "src": "991:2:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1041:24:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1041:24:8",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "1054:11:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1054:11:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "1045:5:8",
                                        "nodeType": "YulTypedName",
                                        "src": "1045:5:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "1139:20:8",
                                      "nodeType": "YulBlock",
                                      "src": "1139:20:8",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "1148:5:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "1148:5:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1155:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "1155:1:8",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "1141:6:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1141:6:8"
                                            },
                                            "nativeSrc": "1141:16:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1141:16:8"
                                          },
                                          "nativeSrc": "1141:16:8",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1141:16:8"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "1089:5:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1089:5:8"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "1096:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1096:2:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "1086:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1086:2:8"
                                      },
                                      "nativeSrc": "1086:13:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1086:13:8"
                                    },
                                    "nativeSrc": "1078:81:8",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "1100:26:8",
                                      "nodeType": "YulBlock",
                                      "src": "1100:26:8",
                                      "statements": [
                                        {
                                          "nativeSrc": "1102:22:8",
                                          "nodeType": "YulAssignment",
                                          "src": "1102:22:8",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "1115:5:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "1115:5:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1122:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "1122:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "1111:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1111:3:8"
                                            },
                                            "nativeSrc": "1111:13:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1111:13:8"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "1102:5:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1102:5:8"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "1082:3:8",
                                      "nodeType": "YulBlock",
                                      "src": "1082:3:8",
                                      "statements": []
                                    },
                                    "src": "1078:81:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "754:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "754:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "759:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "759:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "751:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "751:2:8"
                                },
                                "nativeSrc": "751:11:8",
                                "nodeType": "YulFunctionCall",
                                "src": "751:11:8"
                              },
                              "nativeSrc": "748:421:8",
                              "nodeType": "YulIf",
                              "src": "748:421:8"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "657:518:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "710:5:8",
                            "nodeType": "YulTypedName",
                            "src": "710:5:8",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "717:3:8",
                            "nodeType": "YulTypedName",
                            "src": "717:3:8",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "722:10:8",
                            "nodeType": "YulTypedName",
                            "src": "722:10:8",
                            "type": ""
                          }
                        ],
                        "src": "657:518:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1265:81:8",
                          "nodeType": "YulBlock",
                          "src": "1265:81:8",
                          "statements": [
                            {
                              "nativeSrc": "1275:65:8",
                              "nodeType": "YulAssignment",
                              "src": "1275:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "1290:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1290:4:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1308:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1308:1:8",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "1311:3:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1311:3:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1304:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1304:3:8"
                                                },
                                                "nativeSrc": "1304:11:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1304:11:8"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1321:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1321:1:8",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "1317:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1317:3:8"
                                                },
                                                "nativeSrc": "1317:6:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1317:6:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "1300:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1300:3:8"
                                            },
                                            "nativeSrc": "1300:24:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1300:24:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "1296:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1296:3:8"
                                        },
                                        "nativeSrc": "1296:29:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1296:29:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1286:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1286:3:8"
                                    },
                                    "nativeSrc": "1286:40:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1286:40:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1332:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1332:1:8",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "1335:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1335:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "1328:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1328:3:8"
                                    },
                                    "nativeSrc": "1328:11:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1328:11:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "1283:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1283:2:8"
                                },
                                "nativeSrc": "1283:57:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1283:57:8"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "1275:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1275:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "1180:166:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "1242:4:8",
                            "nodeType": "YulTypedName",
                            "src": "1242:4:8",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "1248:3:8",
                            "nodeType": "YulTypedName",
                            "src": "1248:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "1256:4:8",
                            "nodeType": "YulTypedName",
                            "src": "1256:4:8",
                            "type": ""
                          }
                        ],
                        "src": "1180:166:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1447:1249:8",
                          "nodeType": "YulBlock",
                          "src": "1447:1249:8",
                          "statements": [
                            {
                              "nativeSrc": "1457:24:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1457:24:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "1477:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1477:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1471:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:5:8"
                                },
                                "nativeSrc": "1471:10:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1471:10:8"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "1461:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1461:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1524:22:8",
                                "nodeType": "YulBlock",
                                "src": "1524:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "1526:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1526:16:8"
                                      },
                                      "nativeSrc": "1526:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1526:18:8"
                                    },
                                    "nativeSrc": "1526:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1526:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1496:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1496:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1512:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "1512:2:8",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1516:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "1516:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "1508:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1508:3:8"
                                        },
                                        "nativeSrc": "1508:10:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1508:10:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1520:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1520:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1504:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1504:3:8"
                                    },
                                    "nativeSrc": "1504:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1504:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1493:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1493:2:8"
                                },
                                "nativeSrc": "1493:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1493:30:8"
                              },
                              "nativeSrc": "1490:56:8",
                              "nodeType": "YulIf",
                              "src": "1490:56:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "1599:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1599:4:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "1637:4:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1637:4:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "1631:5:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1631:5:8"
                                        },
                                        "nativeSrc": "1631:11:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1631:11:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "1605:25:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1605:25:8"
                                    },
                                    "nativeSrc": "1605:38:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1605:38:8"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1645:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1645:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "1555:43:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1555:43:8"
                                },
                                "nativeSrc": "1555:97:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1555:97:8"
                              },
                              "nativeSrc": "1555:97:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1555:97:8"
                            },
                            {
                              "nativeSrc": "1661:18:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1661:18:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1678:1:8",
                                "nodeType": "YulLiteral",
                                "src": "1678:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "1665:9:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1665:9:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1688:23:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1688:23:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1707:4:8",
                                "nodeType": "YulLiteral",
                                "src": "1707:4:8",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nativeSrc": "1692:11:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1692:11:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1720:17:8",
                              "nodeType": "YulAssignment",
                              "src": "1720:17:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1733:4:8",
                                "nodeType": "YulLiteral",
                                "src": "1733:4:8",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "1720:9:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1720:9:8"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "1783:656:8",
                                    "nodeType": "YulBlock",
                                    "src": "1783:656:8",
                                    "statements": [
                                      {
                                        "nativeSrc": "1797:35:8",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "1797:35:8",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "1816:6:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1816:6:8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1828:2:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1828:2:8",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "1824:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "1824:3:8"
                                              },
                                              "nativeSrc": "1824:7:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1824:7:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "1812:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1812:3:8"
                                          },
                                          "nativeSrc": "1812:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1812:20:8"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "1801:7:8",
                                            "nodeType": "YulTypedName",
                                            "src": "1801:7:8",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "1845:49:8",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "1845:49:8",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "1889:4:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1889:4:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "1859:29:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1859:29:8"
                                          },
                                          "nativeSrc": "1859:35:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1859:35:8"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "1849:6:8",
                                            "nodeType": "YulTypedName",
                                            "src": "1849:6:8",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "1907:10:8",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "1907:10:8",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "1916:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1916:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "1911:1:8",
                                            "nodeType": "YulTypedName",
                                            "src": "1911:1:8",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "1994:172:8",
                                          "nodeType": "YulBlock",
                                          "src": "1994:172:8",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2019:6:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2019:6:8"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "2037:3:8",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2037:3:8"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "2042:9:8",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2042:9:8"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "2033:3:8",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2033:3:8"
                                                        },
                                                        "nativeSrc": "2033:19:8",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2033:19:8"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "2027:5:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2027:5:8"
                                                    },
                                                    "nativeSrc": "2027:26:8",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2027:26:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "2012:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2012:6:8"
                                                },
                                                "nativeSrc": "2012:42:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2012:42:8"
                                              },
                                              "nativeSrc": "2012:42:8",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2012:42:8"
                                            },
                                            {
                                              "nativeSrc": "2071:24:8",
                                              "nodeType": "YulAssignment",
                                              "src": "2071:24:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2085:6:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2085:6:8"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2093:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2093:1:8",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2081:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2081:3:8"
                                                },
                                                "nativeSrc": "2081:14:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2081:14:8"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "2071:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2071:6:8"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "2112:40:8",
                                              "nodeType": "YulAssignment",
                                              "src": "2112:40:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "2129:9:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2129:9:8"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nativeSrc": "2140:11:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2140:11:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2125:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2125:3:8"
                                                },
                                                "nativeSrc": "2125:27:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2125:27:8"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "2112:9:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2112:9:8"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "1941:1:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1941:1:8"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "1944:7:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1944:7:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "1938:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1938:2:8"
                                          },
                                          "nativeSrc": "1938:14:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1938:14:8"
                                        },
                                        "nativeSrc": "1930:236:8",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "1953:28:8",
                                          "nodeType": "YulBlock",
                                          "src": "1953:28:8",
                                          "statements": [
                                            {
                                              "nativeSrc": "1955:24:8",
                                              "nodeType": "YulAssignment",
                                              "src": "1955:24:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "1964:1:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1964:1:8"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nativeSrc": "1967:11:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1967:11:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "1960:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1960:3:8"
                                                },
                                                "nativeSrc": "1960:19:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1960:19:8"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "1955:1:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1955:1:8"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "1934:3:8",
                                          "nodeType": "YulBlock",
                                          "src": "1934:3:8",
                                          "statements": []
                                        },
                                        "src": "1930:236:8"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2214:166:8",
                                          "nodeType": "YulBlock",
                                          "src": "2214:166:8",
                                          "statements": [
                                            {
                                              "nativeSrc": "2232:43:8",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "2232:43:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "2259:3:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2259:3:8"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "2264:9:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2264:9:8"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "2255:3:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2255:3:8"
                                                    },
                                                    "nativeSrc": "2255:19:8",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2255:19:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "2249:5:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2249:5:8"
                                                },
                                                "nativeSrc": "2249:26:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2249:26:8"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "2236:9:8",
                                                  "nodeType": "YulTypedName",
                                                  "src": "2236:9:8",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2299:6:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2299:6:8"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "2311:9:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2311:9:8"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "2338:1:8",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "2338:1:8",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "2341:6:8",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2341:6:8"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "2334:3:8",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "2334:3:8"
                                                                    },
                                                                    "nativeSrc": "2334:14:8",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2334:14:8"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "2350:3:8",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2350:3:8",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "2330:3:8",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "2330:3:8"
                                                                },
                                                                "nativeSrc": "2330:24:8",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "2330:24:8"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "2360:1:8",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2360:1:8",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "2356:3:8",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "2356:3:8"
                                                                },
                                                                "nativeSrc": "2356:6:8",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "2356:6:8"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "2326:3:8",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "2326:3:8"
                                                            },
                                                            "nativeSrc": "2326:37:8",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2326:37:8"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "2322:3:8",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2322:3:8"
                                                        },
                                                        "nativeSrc": "2322:42:8",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2322:42:8"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "2307:3:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2307:3:8"
                                                    },
                                                    "nativeSrc": "2307:58:8",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2307:58:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "2292:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2292:6:8"
                                                },
                                                "nativeSrc": "2292:74:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2292:74:8"
                                              },
                                              "nativeSrc": "2292:74:8",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2292:74:8"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "2185:7:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2185:7:8"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "2194:6:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2194:6:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "2182:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "2182:2:8"
                                          },
                                          "nativeSrc": "2182:19:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2182:19:8"
                                        },
                                        "nativeSrc": "2179:201:8",
                                        "nodeType": "YulIf",
                                        "src": "2179:201:8"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2400:4:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2400:4:8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "2414:1:8",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2414:1:8",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "2417:6:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2417:6:8"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "2410:3:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2410:3:8"
                                                  },
                                                  "nativeSrc": "2410:14:8",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2410:14:8"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "2426:1:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2426:1:8",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "2406:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "2406:3:8"
                                              },
                                              "nativeSrc": "2406:22:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2406:22:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "2393:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "2393:6:8"
                                          },
                                          "nativeSrc": "2393:36:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2393:36:8"
                                        },
                                        "nativeSrc": "2393:36:8",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2393:36:8"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "1776:663:8",
                                  "nodeType": "YulCase",
                                  "src": "1776:663:8",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "1781:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1781:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "2456:234:8",
                                    "nodeType": "YulBlock",
                                    "src": "2456:234:8",
                                    "statements": [
                                      {
                                        "nativeSrc": "2470:14:8",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2470:14:8",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "2483:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2483:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "2474:5:8",
                                            "nodeType": "YulTypedName",
                                            "src": "2474:5:8",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2519:67:8",
                                          "nodeType": "YulBlock",
                                          "src": "2519:67:8",
                                          "statements": [
                                            {
                                              "nativeSrc": "2537:35:8",
                                              "nodeType": "YulAssignment",
                                              "src": "2537:35:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "2556:3:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2556:3:8"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "2561:9:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2561:9:8"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "2552:3:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2552:3:8"
                                                    },
                                                    "nativeSrc": "2552:19:8",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2552:19:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "2546:5:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2546:5:8"
                                                },
                                                "nativeSrc": "2546:26:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2546:26:8"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "2537:5:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2537:5:8"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "2500:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "2500:6:8"
                                        },
                                        "nativeSrc": "2497:89:8",
                                        "nodeType": "YulIf",
                                        "src": "2497:89:8"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2606:4:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2606:4:8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "2665:5:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2665:5:8"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "2672:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2672:6:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "2612:52:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "2612:52:8"
                                              },
                                              "nativeSrc": "2612:67:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2612:67:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "2599:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "2599:6:8"
                                          },
                                          "nativeSrc": "2599:81:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2599:81:8"
                                        },
                                        "nativeSrc": "2599:81:8",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2599:81:8"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "2448:242:8",
                                  "nodeType": "YulCase",
                                  "src": "2448:242:8",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1756:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1756:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1764:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1764:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1753:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1753:2:8"
                                },
                                "nativeSrc": "1753:14:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1753:14:8"
                              },
                              "nativeSrc": "1746:944:8",
                              "nodeType": "YulSwitch",
                              "src": "1746:944:8"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "1351:1345:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "1432:4:8",
                            "nodeType": "YulTypedName",
                            "src": "1432:4:8",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "1438:3:8",
                            "nodeType": "YulTypedName",
                            "src": "1438:3:8",
                            "type": ""
                          }
                        ],
                        "src": "1351:1345:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2802:102:8",
                          "nodeType": "YulBlock",
                          "src": "2802:102:8",
                          "statements": [
                            {
                              "nativeSrc": "2812:26:8",
                              "nodeType": "YulAssignment",
                              "src": "2812:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2824:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2824:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2835:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2835:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2820:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2820:3:8"
                                },
                                "nativeSrc": "2820:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2820:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2812:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2812:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2854:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2854:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "2869:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2869:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2885:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2885:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2890:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2890:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "2881:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2881:3:8"
                                            },
                                            "nativeSrc": "2881:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2881:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2894:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "2894:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "2877:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "2877:3:8"
                                        },
                                        "nativeSrc": "2877:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2877:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2865:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2865:3:8"
                                    },
                                    "nativeSrc": "2865:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2865:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2847:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2847:6:8"
                                },
                                "nativeSrc": "2847:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2847:51:8"
                              },
                              "nativeSrc": "2847:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "2847:51:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "2701:203:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2771:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2771:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2782:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2782:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2793:4:8",
                            "nodeType": "YulTypedName",
                            "src": "2793:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2701:203:8"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x253AB6B821B937B9B9A1B7BAB837B7 PUSH1 0x89 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4A4343 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x64 SWAP2 SWAP1 PUSH2 0x1AF JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x71 DUP3 DUP3 PUSH2 0x1AF JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA DUP2 PUSH2 0xC6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x8 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x3E8 SWAP1 SSTORE PUSH1 0x2 PUSH1 0x9 SSTORE PUSH2 0x26E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1AA JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x188 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A7 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x194 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1C8 PUSH2 0x117 JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x1D6 DUP5 SLOAD PUSH2 0x12B JUMP JUMPDEST DUP5 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x20F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1F8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x266 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x23D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x21E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x25A JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFC6 DUP1 PUSH2 0x27B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x131 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA8 JUMPI DUP1 PUSH4 0x982B5047 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0x982B5047 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xFB49B207 EQ PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x72F90A9D EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x7AF3816C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x47E75CFE EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x564F4F76 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A1137B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x11E3BDDE EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x14A8BD0D EQ PUSH2 0x1C7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH7 0x2386F26FC10000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH6 0xCBBA106E000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x512 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x525 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH2 0x24C PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E7 SWAP1 PUSH2 0xE10 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x413 SWAP1 PUSH2 0xE10 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x435 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x441 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x475 DUP2 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48E DUP6 DUP3 DUP6 PUSH2 0x797 JUMP JUMPDEST PUSH2 0x499 DUP6 DUP6 DUP6 PUSH2 0x80C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4AC PUSH2 0x869 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH2 0x4C7 DUP3 PUSH1 0xA PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4D9 PUSH2 0x869 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH0 SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x50E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x51A PUSH2 0x869 JUMP JUMPDEST PUSH2 0x523 PUSH0 PUSH2 0x9F3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E7 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x475 DUP2 DUP6 DUP6 PUSH2 0x80C JUMP JUMPDEST PUSH2 0x549 PUSH2 0xA44 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC44DCBD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57B CALLER DUP3 PUSH2 0xA6E JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x595 PUSH6 0xCBBA106E000 DUP5 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x5A7 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD DUP5 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH1 0x9 SLOAD PUSH7 0x2386F26FC10000 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x603 JUMPI DUP1 SWAP3 POP JUMPDEST DUP3 DUP5 SUB SWAP2 POP DUP3 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xF7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x648 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x657 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x662 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x657 DUP2 PUSH2 0x9F3 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC44DCBD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6D1 PUSH6 0xCBBA106E000 DUP5 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x6E3 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0x701 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH7 0x2386F26FC10000 DUP3 GT ISZERO PUSH2 0x728 JUMPI PUSH7 0x2386F26FC10000 SWAP2 POP JUMPDEST PUSH2 0x732 DUP3 DUP5 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH4 0x8CDD9083 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x568 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0xF7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x77F SWAP1 POP CALLER DUP6 PUSH2 0xAA2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x792 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAD6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x77F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x77F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x792 DUP4 DUP4 DUP4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 DUP4 LT DUP1 PUSH2 0x8A5 JUMPI POP PUSH1 0x9 DUP4 GT JUMPDEST ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x305CD7D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F746F636F6C2066656520666163746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x2 DUP3 LT DUP1 PUSH2 0x902 JUMPI POP PUSH1 0x12 DUP3 GT JUMPDEST ISZERO PUSH2 0x950 JUMPI PUSH1 0x40 MLOAD PUSH4 0x305CD7D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F746F636F6C2066656520646563696D616C73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 DUP2 LT DUP1 PUSH2 0x95F JUMPI POP PUSH1 0x5 DUP2 GT JUMPDEST ISZERO PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x305CD7D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F746F636F6C2065786974206D756C7469706C696572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xB03CBA1FD26BEE931DA9FAC9C0A6B1EC951FA21622FB17480ACB831A2A83ED6D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x50E DUP3 PUSH0 DUP4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x50E PUSH0 DUP4 DUP4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x77F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB9A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBD2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0xF7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xC42 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC5E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xCC1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD19 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD38 DUP4 PUSH2 0xD03 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD58 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD61 DUP5 PUSH2 0xD03 JUMP JUMPDEST SWAP3 POP PUSH2 0xD6F PUSH1 0x20 DUP6 ADD PUSH2 0xD03 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDC1 DUP3 PUSH2 0xD03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDF9 DUP4 PUSH2 0xD03 JUMP JUMPDEST SWAP2 POP PUSH2 0xE07 PUSH1 0x20 DUP5 ADD PUSH2 0xD03 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE24 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE42 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xE96 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0xE48 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xE89 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xE61 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xEAC JUMPI POP PUSH1 0x1 PUSH2 0x47B JUMP JUMPDEST DUP2 PUSH2 0xEB8 JUMPI POP PUSH0 PUSH2 0x47B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xECE JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xED8 JUMPI PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x47B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE9 PUSH2 0xE48 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x47B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xF17 JUMPI POP DUP2 DUP2 EXP PUSH2 0x47B JUMP JUMPDEST PUSH2 0xF21 DUP4 DUP4 PUSH2 0xE5C JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF34 PUSH2 0xE48 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDC1 DUP4 DUP4 PUSH2 0xE9E JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0xE48 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0xE48 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH8 0x5A0B37DD51E2BEBF LOG4 0x21 RETURNDATASIZE SELFBALANCE 0xEF PUSH24 0x5D3DD41DC44BDFC4BA4C2F8772ACC58464736F6C63430008 NOT STOP CALLER ",
              "sourceMap": "804:6263:7:-:0;;;1769:178;;;;;;;;;-1:-1:-1;735:10:5;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2847:51:8;2820:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1713:1:6;1917:7;:21;1867:1:7::2;1847:17;:21:::0;;;1897:7:::2;1878:26:::0;;1939:1:::2;1914:22;:26:::0;804:6263;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:8;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:8;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:8;;;2546:26;2497:89;-1:-1:-1;;1308:1:8;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:8;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:8;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2701:203::-;804:6263:7;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@EXCHANGE_RATE_1017": {
                  "entryPoint": null,
                  "id": 1017,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PROTOCOL_FEE_UPPER_LIMIT_1020": {
                  "entryPoint": null,
                  "id": 1020,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_approve_690": {
                  "entryPoint": 1925,
                  "id": 690,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_approve_750": {
                  "entryPoint": 2774,
                  "id": 750,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_burn_672": {
                  "entryPoint": 2670,
                  "id": 672,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_checkOwner_84": {
                  "entryPoint": 2153,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_mint_639": {
                  "entryPoint": 2722,
                  "id": 639,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_915": {
                  "entryPoint": null,
                  "id": 915,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_nonReentrantAfter_990": {
                  "entryPoint": null,
                  "id": 990,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_nonReentrantBefore_982": {
                  "entryPoint": 2628,
                  "id": 982,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_spendAllowance_798": {
                  "entryPoint": 1943,
                  "id": 798,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 2547,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_transfer_529": {
                  "entryPoint": 2060,
                  "id": 529,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_updateProtocolFee_1360": {
                  "entryPoint": 2198,
                  "id": 1360,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_606": {
                  "entryPoint": 2984,
                  "id": 606,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@allowance_426": {
                  "entryPoint": null,
                  "id": 426,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_450": {
                  "entryPoint": 1128,
                  "id": 450,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_385": {
                  "entryPoint": null,
                  "id": 385,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@claimRevenue_1305": {
                  "entryPoint": 1233,
                  "id": 1305,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@decimals_1087": {
                  "entryPoint": null,
                  "id": 1087,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@name_345": {
                  "entryPoint": 984,
                  "id": 345,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pawn_1164": {
                  "entryPoint": 1684,
                  "id": 1164,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@protocolExitMultiplier_1027": {
                  "entryPoint": null,
                  "id": 1027,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@protocolFeeFactor_1023": {
                  "entryPoint": null,
                  "id": 1023,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@protocolFeeScale_1025": {
                  "entryPoint": null,
                  "id": 1025,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@protocolRevenue_1029": {
                  "entryPoint": null,
                  "id": 1029,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@redeem_1249": {
                  "entryPoint": 1345,
                  "id": 1249,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@renounceOwnership_98": {
                  "entryPoint": 1298,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@symbol_354": {
                  "entryPoint": 1317,
                  "id": 354,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalSupply_372": {
                  "entryPoint": null,
                  "id": 372,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_482": {
                  "entryPoint": 1153,
                  "id": 482,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transferOwnership_126": {
                  "entryPoint": 1626,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@transfer_409": {
                  "entryPoint": 1332,
                  "id": 409,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@updateProtocolFee_1282": {
                  "entryPoint": 1188,
                  "id": 1282,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 3331,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 3496,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 3551,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 3398,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 3358,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 3528,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_uint256t_uint256": {
                  "entryPoint": 3455,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 3278,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0ac4eb53c5ef927cab2843d4ff7bb6b429b04c56a7eb9ff18f274a79b549fa24__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0f8b1980f48fa75071ee6c49ec20fad42b0a50c9de1d75b15eb3fdd1c5fe125a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_de2705891d4e97fb2694e2778382fbb891ffcbb2ceee5147388962b94a59f294__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3965,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 3934,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 3676,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint256": {
                  "entryPoint": 3900,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 3742,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 3911,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 3600,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3656,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:7349:8",
                    "nodeType": "YulBlock",
                    "src": "0:7349:8",
                    "statements": [
                      {
                        "nativeSrc": "6:3:8",
                        "nodeType": "YulBlock",
                        "src": "6:3:8",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "115:76:8",
                          "nodeType": "YulBlock",
                          "src": "115:76:8",
                          "statements": [
                            {
                              "nativeSrc": "125:26:8",
                              "nodeType": "YulAssignment",
                              "src": "125:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "137:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "148:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "133:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:8"
                                },
                                "nativeSrc": "133:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "125:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "167:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:8"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "178:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "160:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:8"
                                },
                                "nativeSrc": "160:25:8",
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:8"
                              },
                              "nativeSrc": "160:25:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "14:177:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "84:9:8",
                            "nodeType": "YulTypedName",
                            "src": "84:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "95:6:8",
                            "nodeType": "YulTypedName",
                            "src": "95:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "106:4:8",
                            "nodeType": "YulTypedName",
                            "src": "106:4:8",
                            "type": ""
                          }
                        ],
                        "src": "14:177:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "317:297:8",
                          "nodeType": "YulBlock",
                          "src": "317:297:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "334:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "334:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "345:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "345:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "327:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "327:6:8"
                                },
                                "nativeSrc": "327:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "327:21:8"
                              },
                              "nativeSrc": "327:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "327:21:8"
                            },
                            {
                              "nativeSrc": "357:27:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "357:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "377:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "377:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "371:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "371:5:8"
                                },
                                "nativeSrc": "371:13:8",
                                "nodeType": "YulFunctionCall",
                                "src": "371:13:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "361:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "361:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "404:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "404:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "415:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "415:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "400:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "400:3:8"
                                    },
                                    "nativeSrc": "400:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "400:18:8"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "420:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "420:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "393:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "393:6:8"
                                },
                                "nativeSrc": "393:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "393:34:8"
                              },
                              "nativeSrc": "393:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "393:34:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "446:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "446:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "457:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "457:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "442:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "442:3:8"
                                    },
                                    "nativeSrc": "442:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "442:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "466:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "466:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "474:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "474:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "462:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "462:3:8"
                                    },
                                    "nativeSrc": "462:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "462:15:8"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "479:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "479:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mcopy",
                                  "nativeSrc": "436:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "436:5:8"
                                },
                                "nativeSrc": "436:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "436:50:8"
                              },
                              "nativeSrc": "436:50:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "436:50:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "510:9:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "510:9:8"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "521:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "521:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "506:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "506:3:8"
                                        },
                                        "nativeSrc": "506:22:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "506:22:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "530:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "530:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "502:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "502:3:8"
                                    },
                                    "nativeSrc": "502:31:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "502:31:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "535:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "535:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "495:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "495:6:8"
                                },
                                "nativeSrc": "495:42:8",
                                "nodeType": "YulFunctionCall",
                                "src": "495:42:8"
                              },
                              "nativeSrc": "495:42:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "495:42:8"
                            },
                            {
                              "nativeSrc": "546:62:8",
                              "nodeType": "YulAssignment",
                              "src": "546:62:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "562:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "562:9:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nativeSrc": "581:6:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "581:6:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "589:2:8",
                                                "nodeType": "YulLiteral",
                                                "src": "589:2:8",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "577:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "577:3:8"
                                            },
                                            "nativeSrc": "577:15:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "577:15:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "598:2:8",
                                                "nodeType": "YulLiteral",
                                                "src": "598:2:8",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "594:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "594:3:8"
                                            },
                                            "nativeSrc": "594:7:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "594:7:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "573:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "573:3:8"
                                        },
                                        "nativeSrc": "573:29:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "573:29:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "558:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "558:3:8"
                                    },
                                    "nativeSrc": "558:45:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "558:45:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "605:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "605:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "554:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "554:3:8"
                                },
                                "nativeSrc": "554:54:8",
                                "nodeType": "YulFunctionCall",
                                "src": "554:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "546:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "546:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "196:418:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "286:9:8",
                            "nodeType": "YulTypedName",
                            "src": "286:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "297:6:8",
                            "nodeType": "YulTypedName",
                            "src": "297:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "308:4:8",
                            "nodeType": "YulTypedName",
                            "src": "308:4:8",
                            "type": ""
                          }
                        ],
                        "src": "196:418:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "668:124:8",
                          "nodeType": "YulBlock",
                          "src": "668:124:8",
                          "statements": [
                            {
                              "nativeSrc": "678:29:8",
                              "nodeType": "YulAssignment",
                              "src": "678:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "700:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "700:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "687:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "687:12:8"
                                },
                                "nativeSrc": "687:20:8",
                                "nodeType": "YulFunctionCall",
                                "src": "687:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "678:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "678:5:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "770:16:8",
                                "nodeType": "YulBlock",
                                "src": "770:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "779:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "779:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "782:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "782:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "772:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "772:6:8"
                                      },
                                      "nativeSrc": "772:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "772:12:8"
                                    },
                                    "nativeSrc": "772:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "772:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "729:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "729:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "740:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "740:5:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "755:3:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "755:3:8",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "760:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "760:1:8",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "751:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "751:3:8"
                                                },
                                                "nativeSrc": "751:11:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "751:11:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "764:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "764:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "747:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "747:3:8"
                                            },
                                            "nativeSrc": "747:19:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "747:19:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "736:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "736:3:8"
                                        },
                                        "nativeSrc": "736:31:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "736:31:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "726:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "726:2:8"
                                    },
                                    "nativeSrc": "726:42:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "726:42:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "719:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "719:6:8"
                                },
                                "nativeSrc": "719:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "719:50:8"
                              },
                              "nativeSrc": "716:70:8",
                              "nodeType": "YulIf",
                              "src": "716:70:8"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nativeSrc": "619:173:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "647:6:8",
                            "nodeType": "YulTypedName",
                            "src": "647:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "658:5:8",
                            "nodeType": "YulTypedName",
                            "src": "658:5:8",
                            "type": ""
                          }
                        ],
                        "src": "619:173:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "884:167:8",
                          "nodeType": "YulBlock",
                          "src": "884:167:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "930:16:8",
                                "nodeType": "YulBlock",
                                "src": "930:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "939:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "939:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "942:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "942:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "932:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "932:6:8"
                                      },
                                      "nativeSrc": "932:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "932:12:8"
                                    },
                                    "nativeSrc": "932:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "932:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "905:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "905:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "914:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "914:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "901:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "901:3:8"
                                    },
                                    "nativeSrc": "901:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "901:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "926:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "926:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "897:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "897:3:8"
                                },
                                "nativeSrc": "897:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "897:32:8"
                              },
                              "nativeSrc": "894:52:8",
                              "nodeType": "YulIf",
                              "src": "894:52:8"
                            },
                            {
                              "nativeSrc": "955:39:8",
                              "nodeType": "YulAssignment",
                              "src": "955:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "984:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "984:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "965:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "965:18:8"
                                },
                                "nativeSrc": "965:29:8",
                                "nodeType": "YulFunctionCall",
                                "src": "965:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "955:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "955:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1003:42:8",
                              "nodeType": "YulAssignment",
                              "src": "1003:42:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1030:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1030:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1041:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1041:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1026:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1026:3:8"
                                    },
                                    "nativeSrc": "1026:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1026:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1013:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1013:12:8"
                                },
                                "nativeSrc": "1013:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1013:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1003:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1003:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nativeSrc": "797:254:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "842:9:8",
                            "nodeType": "YulTypedName",
                            "src": "842:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "853:7:8",
                            "nodeType": "YulTypedName",
                            "src": "853:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "865:6:8",
                            "nodeType": "YulTypedName",
                            "src": "865:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "873:6:8",
                            "nodeType": "YulTypedName",
                            "src": "873:6:8",
                            "type": ""
                          }
                        ],
                        "src": "797:254:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1151:92:8",
                          "nodeType": "YulBlock",
                          "src": "1151:92:8",
                          "statements": [
                            {
                              "nativeSrc": "1161:26:8",
                              "nodeType": "YulAssignment",
                              "src": "1161:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1173:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1173:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1184:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1184:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1169:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1169:3:8"
                                },
                                "nativeSrc": "1169:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1169:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1161:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1161:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1203:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1203:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "1228:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1228:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "1221:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1221:6:8"
                                        },
                                        "nativeSrc": "1221:14:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1221:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "1214:6:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1214:6:8"
                                    },
                                    "nativeSrc": "1214:22:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1214:22:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1196:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1196:6:8"
                                },
                                "nativeSrc": "1196:41:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1196:41:8"
                              },
                              "nativeSrc": "1196:41:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1196:41:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "1056:187:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1120:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1120:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1131:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1131:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1142:4:8",
                            "nodeType": "YulTypedName",
                            "src": "1142:4:8",
                            "type": ""
                          }
                        ],
                        "src": "1056:187:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1352:224:8",
                          "nodeType": "YulBlock",
                          "src": "1352:224:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1398:16:8",
                                "nodeType": "YulBlock",
                                "src": "1398:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1407:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1407:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1410:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1410:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1400:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:6:8"
                                      },
                                      "nativeSrc": "1400:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1400:12:8"
                                    },
                                    "nativeSrc": "1400:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1400:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1373:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1373:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1382:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1382:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1369:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1369:3:8"
                                    },
                                    "nativeSrc": "1369:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1369:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1394:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1394:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1365:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1365:3:8"
                                },
                                "nativeSrc": "1365:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1365:32:8"
                              },
                              "nativeSrc": "1362:52:8",
                              "nodeType": "YulIf",
                              "src": "1362:52:8"
                            },
                            {
                              "nativeSrc": "1423:39:8",
                              "nodeType": "YulAssignment",
                              "src": "1423:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1452:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1452:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1433:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1433:18:8"
                                },
                                "nativeSrc": "1433:29:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1433:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1423:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1423:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1471:48:8",
                              "nodeType": "YulAssignment",
                              "src": "1471:48:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1504:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1504:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1515:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1515:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1500:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1500:3:8"
                                    },
                                    "nativeSrc": "1500:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1500:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1481:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1481:18:8"
                                },
                                "nativeSrc": "1481:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1481:38:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1471:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1528:42:8",
                              "nodeType": "YulAssignment",
                              "src": "1528:42:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1555:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1555:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1566:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1566:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1551:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1551:3:8"
                                    },
                                    "nativeSrc": "1551:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1551:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1538:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1538:12:8"
                                },
                                "nativeSrc": "1538:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1538:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1528:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1528:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nativeSrc": "1248:328:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1302:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1302:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1313:7:8",
                            "nodeType": "YulTypedName",
                            "src": "1313:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1325:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1325:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1333:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1333:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1341:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1341:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1248:328:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1678:87:8",
                          "nodeType": "YulBlock",
                          "src": "1678:87:8",
                          "statements": [
                            {
                              "nativeSrc": "1688:26:8",
                              "nodeType": "YulAssignment",
                              "src": "1688:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1700:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1700:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1711:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1711:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1696:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:3:8"
                                },
                                "nativeSrc": "1696:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1696:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1688:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1688:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1730:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1730:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1745:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1745:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1753:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1753:4:8",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1741:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1741:3:8"
                                    },
                                    "nativeSrc": "1741:17:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1741:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1723:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1723:6:8"
                                },
                                "nativeSrc": "1723:36:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1723:36:8"
                              },
                              "nativeSrc": "1723:36:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1723:36:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "1581:184:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1647:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1647:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1658:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1658:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1669:4:8",
                            "nodeType": "YulTypedName",
                            "src": "1669:4:8",
                            "type": ""
                          }
                        ],
                        "src": "1581:184:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1874:212:8",
                          "nodeType": "YulBlock",
                          "src": "1874:212:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1920:16:8",
                                "nodeType": "YulBlock",
                                "src": "1920:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1929:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1929:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1932:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1932:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1922:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1922:6:8"
                                      },
                                      "nativeSrc": "1922:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1922:12:8"
                                    },
                                    "nativeSrc": "1922:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1922:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1895:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1895:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1904:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1904:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1891:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1891:3:8"
                                    },
                                    "nativeSrc": "1891:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1891:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1916:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1916:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1887:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1887:3:8"
                                },
                                "nativeSrc": "1887:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1887:32:8"
                              },
                              "nativeSrc": "1884:52:8",
                              "nodeType": "YulIf",
                              "src": "1884:52:8"
                            },
                            {
                              "nativeSrc": "1945:33:8",
                              "nodeType": "YulAssignment",
                              "src": "1945:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1968:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1968:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1955:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1955:12:8"
                                },
                                "nativeSrc": "1955:23:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1955:23:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1945:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1945:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1987:42:8",
                              "nodeType": "YulAssignment",
                              "src": "1987:42:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2014:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2014:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2025:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2025:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2010:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2010:3:8"
                                    },
                                    "nativeSrc": "2010:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2010:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1997:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1997:12:8"
                                },
                                "nativeSrc": "1997:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1997:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1987:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1987:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2038:42:8",
                              "nodeType": "YulAssignment",
                              "src": "2038:42:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2065:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2065:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2076:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2076:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2061:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2061:3:8"
                                    },
                                    "nativeSrc": "2061:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2061:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2048:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2048:12:8"
                                },
                                "nativeSrc": "2048:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2048:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "2038:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2038:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
                        "nativeSrc": "1770:316:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1824:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1824:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1835:7:8",
                            "nodeType": "YulTypedName",
                            "src": "1835:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1847:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1847:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1855:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1855:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1863:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1863:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1770:316:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2161:116:8",
                          "nodeType": "YulBlock",
                          "src": "2161:116:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2207:16:8",
                                "nodeType": "YulBlock",
                                "src": "2207:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2216:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2216:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2219:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2219:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2209:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2209:6:8"
                                      },
                                      "nativeSrc": "2209:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2209:12:8"
                                    },
                                    "nativeSrc": "2209:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2209:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2182:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2182:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2191:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2191:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2178:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2178:3:8"
                                    },
                                    "nativeSrc": "2178:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2178:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2203:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2203:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2174:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2174:3:8"
                                },
                                "nativeSrc": "2174:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2174:32:8"
                              },
                              "nativeSrc": "2171:52:8",
                              "nodeType": "YulIf",
                              "src": "2171:52:8"
                            },
                            {
                              "nativeSrc": "2232:39:8",
                              "nodeType": "YulAssignment",
                              "src": "2232:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2261:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2261:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2242:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2242:18:8"
                                },
                                "nativeSrc": "2242:29:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2242:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2232:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2232:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "2091:186:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2127:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2127:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2138:7:8",
                            "nodeType": "YulTypedName",
                            "src": "2138:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2150:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2150:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2091:186:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2383:102:8",
                          "nodeType": "YulBlock",
                          "src": "2383:102:8",
                          "statements": [
                            {
                              "nativeSrc": "2393:26:8",
                              "nodeType": "YulAssignment",
                              "src": "2393:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2405:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2405:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2416:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2416:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2401:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2401:3:8"
                                },
                                "nativeSrc": "2401:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2401:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2393:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2393:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2435:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2435:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "2450:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2450:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2466:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2466:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2471:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2471:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "2462:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2462:3:8"
                                            },
                                            "nativeSrc": "2462:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2462:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2475:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "2475:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "2458:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "2458:3:8"
                                        },
                                        "nativeSrc": "2458:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2458:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2446:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2446:3:8"
                                    },
                                    "nativeSrc": "2446:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2446:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2428:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2428:6:8"
                                },
                                "nativeSrc": "2428:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2428:51:8"
                              },
                              "nativeSrc": "2428:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "2428:51:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "2282:203:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2352:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2352:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2363:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2363:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2374:4:8",
                            "nodeType": "YulTypedName",
                            "src": "2374:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2282:203:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2560:110:8",
                          "nodeType": "YulBlock",
                          "src": "2560:110:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2606:16:8",
                                "nodeType": "YulBlock",
                                "src": "2606:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2615:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2615:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2618:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2618:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2608:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2608:6:8"
                                      },
                                      "nativeSrc": "2608:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2608:12:8"
                                    },
                                    "nativeSrc": "2608:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2608:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2581:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2581:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2590:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2590:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2577:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2577:3:8"
                                    },
                                    "nativeSrc": "2577:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2577:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2602:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2602:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2573:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2573:3:8"
                                },
                                "nativeSrc": "2573:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2573:32:8"
                              },
                              "nativeSrc": "2570:52:8",
                              "nodeType": "YulIf",
                              "src": "2570:52:8"
                            },
                            {
                              "nativeSrc": "2631:33:8",
                              "nodeType": "YulAssignment",
                              "src": "2631:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2654:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2654:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2641:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2641:12:8"
                                },
                                "nativeSrc": "2641:23:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2641:23:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2631:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2631:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "2490:180:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2526:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2526:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2537:7:8",
                            "nodeType": "YulTypedName",
                            "src": "2537:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2549:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2549:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2490:180:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2762:173:8",
                          "nodeType": "YulBlock",
                          "src": "2762:173:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2808:16:8",
                                "nodeType": "YulBlock",
                                "src": "2808:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2817:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2817:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2820:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2820:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2810:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2810:6:8"
                                      },
                                      "nativeSrc": "2810:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2810:12:8"
                                    },
                                    "nativeSrc": "2810:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2810:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2783:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2783:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2792:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2792:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2779:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2779:3:8"
                                    },
                                    "nativeSrc": "2779:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2779:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2804:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2804:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2775:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2775:3:8"
                                },
                                "nativeSrc": "2775:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2775:32:8"
                              },
                              "nativeSrc": "2772:52:8",
                              "nodeType": "YulIf",
                              "src": "2772:52:8"
                            },
                            {
                              "nativeSrc": "2833:39:8",
                              "nodeType": "YulAssignment",
                              "src": "2833:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2862:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2862:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2843:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2843:18:8"
                                },
                                "nativeSrc": "2843:29:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2843:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2833:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2833:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2881:48:8",
                              "nodeType": "YulAssignment",
                              "src": "2881:48:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2914:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2914:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2925:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2925:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2910:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2910:3:8"
                                    },
                                    "nativeSrc": "2910:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2910:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2891:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2891:18:8"
                                },
                                "nativeSrc": "2891:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2891:38:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2881:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2881:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nativeSrc": "2675:260:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2720:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2720:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2731:7:8",
                            "nodeType": "YulTypedName",
                            "src": "2731:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2743:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2743:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "2751:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2751:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2675:260:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2995:325:8",
                          "nodeType": "YulBlock",
                          "src": "2995:325:8",
                          "statements": [
                            {
                              "nativeSrc": "3005:22:8",
                              "nodeType": "YulAssignment",
                              "src": "3005:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3019:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3019:1:8",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "3022:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3022:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "3015:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3015:3:8"
                                },
                                "nativeSrc": "3015:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3015:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "3005:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3005:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3036:38:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3036:38:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "3066:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3066:4:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3072:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3072:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "3062:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3062:3:8"
                                },
                                "nativeSrc": "3062:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3062:12:8"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "3040:18:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3040:18:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3113:31:8",
                                "nodeType": "YulBlock",
                                "src": "3113:31:8",
                                "statements": [
                                  {
                                    "nativeSrc": "3115:27:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3115:27:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "3129:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3129:6:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3137:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3137:4:8",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "3125:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3125:3:8"
                                      },
                                      "nativeSrc": "3125:17:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3125:17:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "3115:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3115:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "3093:18:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3093:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3086:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3086:6:8"
                                },
                                "nativeSrc": "3086:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3086:26:8"
                              },
                              "nativeSrc": "3083:61:8",
                              "nodeType": "YulIf",
                              "src": "3083:61:8"
                            },
                            {
                              "body": {
                                "nativeSrc": "3203:111:8",
                                "nodeType": "YulBlock",
                                "src": "3203:111:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3224:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3224:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3231:3:8",
                                              "nodeType": "YulLiteral",
                                              "src": "3231:3:8",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3236:10:8",
                                              "nodeType": "YulLiteral",
                                              "src": "3236:10:8",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "3227:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3227:3:8"
                                          },
                                          "nativeSrc": "3227:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3227:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3217:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3217:6:8"
                                      },
                                      "nativeSrc": "3217:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3217:31:8"
                                    },
                                    "nativeSrc": "3217:31:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3217:31:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3268:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3268:1:8",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3271:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3271:4:8",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3261:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3261:6:8"
                                      },
                                      "nativeSrc": "3261:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3261:15:8"
                                    },
                                    "nativeSrc": "3261:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3261:15:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3296:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3296:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3299:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3299:4:8",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3289:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3289:6:8"
                                      },
                                      "nativeSrc": "3289:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3289:15:8"
                                    },
                                    "nativeSrc": "3289:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3289:15:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "3159:18:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3159:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "3182:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3182:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3190:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3190:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "3179:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3179:2:8"
                                    },
                                    "nativeSrc": "3179:14:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3179:14:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "3156:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3156:2:8"
                                },
                                "nativeSrc": "3156:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3156:38:8"
                              },
                              "nativeSrc": "3153:161:8",
                              "nodeType": "YulIf",
                              "src": "3153:161:8"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "2940:380:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "2975:4:8",
                            "nodeType": "YulTypedName",
                            "src": "2975:4:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "2984:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2984:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2940:380:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3357:95:8",
                          "nodeType": "YulBlock",
                          "src": "3357:95:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3374:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3374:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3381:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3381:3:8",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3386:10:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3386:10:8",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "3377:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3377:3:8"
                                    },
                                    "nativeSrc": "3377:20:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3377:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3367:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3367:6:8"
                                },
                                "nativeSrc": "3367:31:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3367:31:8"
                              },
                              "nativeSrc": "3367:31:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3367:31:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3414:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3414:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3417:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3417:4:8",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3407:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3407:6:8"
                                },
                                "nativeSrc": "3407:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3407:15:8"
                              },
                              "nativeSrc": "3407:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3407:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3438:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3438:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3441:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3441:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "3431:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3431:6:8"
                                },
                                "nativeSrc": "3431:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3431:15:8"
                              },
                              "nativeSrc": "3431:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3431:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "3325:127:8",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3325:127:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3521:352:8",
                          "nodeType": "YulBlock",
                          "src": "3521:352:8",
                          "statements": [
                            {
                              "nativeSrc": "3531:16:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3531:16:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3546:1:8",
                                "nodeType": "YulLiteral",
                                "src": "3546:1:8",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "3535:7:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3535:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3556:10:8",
                              "nodeType": "YulAssignment",
                              "src": "3556:10:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3565:1:8",
                                "nodeType": "YulLiteral",
                                "src": "3565:1:8",
                                "type": "",
                                "value": "1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "3556:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3556:5:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3575:13:8",
                              "nodeType": "YulAssignment",
                              "src": "3575:13:8",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "3583:5:8",
                                "nodeType": "YulIdentifier",
                                "src": "3583:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "3575:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3575:4:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3639:228:8",
                                "nodeType": "YulBlock",
                                "src": "3639:228:8",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "3684:22:8",
                                      "nodeType": "YulBlock",
                                      "src": "3684:22:8",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "3686:16:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3686:16:8"
                                            },
                                            "nativeSrc": "3686:18:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3686:18:8"
                                          },
                                          "nativeSrc": "3686:18:8",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3686:18:8"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3659:4:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3659:4:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "3673:1:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3673:1:8",
                                                  "type": "",
                                                  "value": "0"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "3669:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3669:3:8"
                                              },
                                              "nativeSrc": "3669:6:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3669:6:8"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "3677:4:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3677:4:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "3665:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3665:3:8"
                                          },
                                          "nativeSrc": "3665:17:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3665:17:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "3656:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3656:2:8"
                                      },
                                      "nativeSrc": "3656:27:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3656:27:8"
                                    },
                                    "nativeSrc": "3653:53:8",
                                    "nodeType": "YulIf",
                                    "src": "3653:53:8"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "3745:29:8",
                                      "nodeType": "YulBlock",
                                      "src": "3745:29:8",
                                      "statements": [
                                        {
                                          "nativeSrc": "3747:25:8",
                                          "nodeType": "YulAssignment",
                                          "src": "3747:25:8",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "3760:5:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3760:5:8"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "3767:4:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3767:4:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "3756:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3756:3:8"
                                            },
                                            "nativeSrc": "3756:16:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3756:16:8"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "3747:5:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3747:5:8"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3726:8:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3726:8:8"
                                        },
                                        {
                                          "name": "power_1",
                                          "nativeSrc": "3736:7:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3736:7:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "3722:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3722:3:8"
                                      },
                                      "nativeSrc": "3722:22:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3722:22:8"
                                    },
                                    "nativeSrc": "3719:55:8",
                                    "nodeType": "YulIf",
                                    "src": "3719:55:8"
                                  },
                                  {
                                    "nativeSrc": "3787:23:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3787:23:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3799:4:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3799:4:8"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "3805:4:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3805:4:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "3795:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3795:3:8"
                                      },
                                      "nativeSrc": "3795:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3795:15:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "3787:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3787:4:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3823:34:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3823:34:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nativeSrc": "3839:7:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3839:7:8"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3848:8:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3848:8:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "3835:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3835:3:8"
                                      },
                                      "nativeSrc": "3835:22:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3835:22:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "3823:8:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3823:8:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3608:8:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3608:8:8"
                                  },
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "3618:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3618:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3605:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3605:2:8"
                                },
                                "nativeSrc": "3605:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3605:21:8"
                              },
                              "nativeSrc": "3597:270:8",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "3627:3:8",
                                "nodeType": "YulBlock",
                                "src": "3627:3:8",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "3601:3:8",
                                "nodeType": "YulBlock",
                                "src": "3601:3:8",
                                "statements": []
                              },
                              "src": "3597:270:8"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "3457:416:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nativeSrc": "3485:5:8",
                            "nodeType": "YulTypedName",
                            "src": "3485:5:8",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3492:8:8",
                            "nodeType": "YulTypedName",
                            "src": "3492:8:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3505:5:8",
                            "nodeType": "YulTypedName",
                            "src": "3505:5:8",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "3512:4:8",
                            "nodeType": "YulTypedName",
                            "src": "3512:4:8",
                            "type": ""
                          }
                        ],
                        "src": "3457:416:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3937:747:8",
                          "nodeType": "YulBlock",
                          "src": "3937:747:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3975:52:8",
                                "nodeType": "YulBlock",
                                "src": "3975:52:8",
                                "statements": [
                                  {
                                    "nativeSrc": "3989:10:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3989:10:8",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3998:1:8",
                                      "nodeType": "YulLiteral",
                                      "src": "3998:1:8",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3989:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3989:5:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4012:5:8",
                                    "nodeType": "YulLeave",
                                    "src": "4012:5:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3957:8:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3957:8:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3950:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3950:6:8"
                                },
                                "nativeSrc": "3950:16:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3950:16:8"
                              },
                              "nativeSrc": "3947:80:8",
                              "nodeType": "YulIf",
                              "src": "3947:80:8"
                            },
                            {
                              "body": {
                                "nativeSrc": "4060:52:8",
                                "nodeType": "YulBlock",
                                "src": "4060:52:8",
                                "statements": [
                                  {
                                    "nativeSrc": "4074:10:8",
                                    "nodeType": "YulAssignment",
                                    "src": "4074:10:8",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "4083:1:8",
                                      "nodeType": "YulLiteral",
                                      "src": "4083:1:8",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "4074:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4074:5:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4097:5:8",
                                    "nodeType": "YulLeave",
                                    "src": "4097:5:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4046:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4046:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4039:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4039:6:8"
                                },
                                "nativeSrc": "4039:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4039:12:8"
                              },
                              "nativeSrc": "4036:76:8",
                              "nodeType": "YulIf",
                              "src": "4036:76:8"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "4148:52:8",
                                    "nodeType": "YulBlock",
                                    "src": "4148:52:8",
                                    "statements": [
                                      {
                                        "nativeSrc": "4162:10:8",
                                        "nodeType": "YulAssignment",
                                        "src": "4162:10:8",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "4171:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4171:1:8",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "4162:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4162:5:8"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "4185:5:8",
                                        "nodeType": "YulLeave",
                                        "src": "4185:5:8"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "4141:59:8",
                                  "nodeType": "YulCase",
                                  "src": "4141:59:8",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4146:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4146:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "4216:123:8",
                                    "nodeType": "YulBlock",
                                    "src": "4216:123:8",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "4251:22:8",
                                          "nodeType": "YulBlock",
                                          "src": "4251:22:8",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "4253:16:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4253:16:8"
                                                },
                                                "nativeSrc": "4253:18:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4253:18:8"
                                              },
                                              "nativeSrc": "4253:18:8",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "4253:18:8"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "4236:8:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4236:8:8"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4246:3:8",
                                              "nodeType": "YulLiteral",
                                              "src": "4246:3:8",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "4233:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4233:2:8"
                                          },
                                          "nativeSrc": "4233:17:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4233:17:8"
                                        },
                                        "nativeSrc": "4230:43:8",
                                        "nodeType": "YulIf",
                                        "src": "4230:43:8"
                                      },
                                      {
                                        "nativeSrc": "4286:25:8",
                                        "nodeType": "YulAssignment",
                                        "src": "4286:25:8",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "4299:8:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4299:8:8"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4309:1:8",
                                              "nodeType": "YulLiteral",
                                              "src": "4309:1:8",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "4295:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4295:3:8"
                                          },
                                          "nativeSrc": "4295:16:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4295:16:8"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "4286:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4286:5:8"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "4324:5:8",
                                        "nodeType": "YulLeave",
                                        "src": "4324:5:8"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "4209:130:8",
                                  "nodeType": "YulCase",
                                  "src": "4209:130:8",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4214:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4214:1:8",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "4128:4:8",
                                "nodeType": "YulIdentifier",
                                "src": "4128:4:8"
                              },
                              "nativeSrc": "4121:218:8",
                              "nodeType": "YulSwitch",
                              "src": "4121:218:8"
                            },
                            {
                              "body": {
                                "nativeSrc": "4437:70:8",
                                "nodeType": "YulBlock",
                                "src": "4437:70:8",
                                "statements": [
                                  {
                                    "nativeSrc": "4451:28:8",
                                    "nodeType": "YulAssignment",
                                    "src": "4451:28:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "4464:4:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4464:4:8"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "4470:8:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4470:8:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "4460:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4460:3:8"
                                      },
                                      "nativeSrc": "4460:19:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4460:19:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "4451:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4451:5:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4492:5:8",
                                    "nodeType": "YulLeave",
                                    "src": "4492:5:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "4361:4:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4361:4:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4367:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "4367:2:8",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4358:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4358:2:8"
                                        },
                                        "nativeSrc": "4358:12:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4358:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "4375:8:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4375:8:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4385:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "4385:2:8",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4372:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4372:2:8"
                                        },
                                        "nativeSrc": "4372:16:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4372:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4354:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4354:3:8"
                                    },
                                    "nativeSrc": "4354:35:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4354:35:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "4398:4:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4398:4:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4404:3:8",
                                            "nodeType": "YulLiteral",
                                            "src": "4404:3:8",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4395:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4395:2:8"
                                        },
                                        "nativeSrc": "4395:13:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4395:13:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "4413:8:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4413:8:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4423:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "4423:2:8",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4410:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4410:2:8"
                                        },
                                        "nativeSrc": "4410:16:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4410:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4391:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4391:3:8"
                                    },
                                    "nativeSrc": "4391:36:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4391:36:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "4351:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4351:2:8"
                                },
                                "nativeSrc": "4351:77:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4351:77:8"
                              },
                              "nativeSrc": "4348:159:8",
                              "nodeType": "YulIf",
                              "src": "4348:159:8"
                            },
                            {
                              "nativeSrc": "4516:57:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4516:57:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4558:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4558:4:8"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "4564:8:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4564:8:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "4539:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4539:18:8"
                                },
                                "nativeSrc": "4539:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4539:34:8"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "4520:7:8",
                                  "nodeType": "YulTypedName",
                                  "src": "4520:7:8",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nativeSrc": "4529:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "4529:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4618:22:8",
                                "nodeType": "YulBlock",
                                "src": "4618:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4620:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4620:16:8"
                                      },
                                      "nativeSrc": "4620:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4620:18:8"
                                    },
                                    "nativeSrc": "4620:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4620:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4588:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4588:7:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4605:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "4605:1:8",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "4601:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4601:3:8"
                                        },
                                        "nativeSrc": "4601:6:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4601:6:8"
                                      },
                                      {
                                        "name": "base_1",
                                        "nativeSrc": "4609:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4609:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "4597:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4597:3:8"
                                    },
                                    "nativeSrc": "4597:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4597:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4585:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4585:2:8"
                                },
                                "nativeSrc": "4585:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4585:32:8"
                              },
                              "nativeSrc": "4582:58:8",
                              "nodeType": "YulIf",
                              "src": "4582:58:8"
                            },
                            {
                              "nativeSrc": "4649:29:8",
                              "nodeType": "YulAssignment",
                              "src": "4649:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4662:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4662:7:8"
                                  },
                                  {
                                    "name": "base_1",
                                    "nativeSrc": "4671:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4671:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4658:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4658:3:8"
                                },
                                "nativeSrc": "4658:20:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4658:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4649:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4649:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "3878:806:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "3908:4:8",
                            "nodeType": "YulTypedName",
                            "src": "3908:4:8",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3914:8:8",
                            "nodeType": "YulTypedName",
                            "src": "3914:8:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3927:5:8",
                            "nodeType": "YulTypedName",
                            "src": "3927:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3878:806:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "4759:61:8",
                          "nodeType": "YulBlock",
                          "src": "4759:61:8",
                          "statements": [
                            {
                              "nativeSrc": "4769:45:8",
                              "nodeType": "YulAssignment",
                              "src": "4769:45:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4799:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4799:4:8"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "4805:8:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4805:8:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "4778:20:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4778:20:8"
                                },
                                "nativeSrc": "4778:36:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4778:36:8"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4769:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4769:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nativeSrc": "4689:131:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "4730:4:8",
                            "nodeType": "YulTypedName",
                            "src": "4730:4:8",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "4736:8:8",
                            "nodeType": "YulTypedName",
                            "src": "4736:8:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "4749:5:8",
                            "nodeType": "YulTypedName",
                            "src": "4749:5:8",
                            "type": ""
                          }
                        ],
                        "src": "4689:131:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "4877:116:8",
                          "nodeType": "YulBlock",
                          "src": "4877:116:8",
                          "statements": [
                            {
                              "nativeSrc": "4887:20:8",
                              "nodeType": "YulAssignment",
                              "src": "4887:20:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4902:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4902:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4905:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4905:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4898:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4898:3:8"
                                },
                                "nativeSrc": "4898:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4898:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "4887:7:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4887:7:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4965:22:8",
                                "nodeType": "YulBlock",
                                "src": "4965:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4967:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4967:16:8"
                                      },
                                      "nativeSrc": "4967:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4967:18:8"
                                    },
                                    "nativeSrc": "4967:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4967:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "4936:1:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4936:1:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "4929:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4929:6:8"
                                        },
                                        "nativeSrc": "4929:9:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4929:9:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "4943:1:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4943:1:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "4950:7:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "4950:7:8"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "4959:1:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "4959:1:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "4946:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4946:3:8"
                                            },
                                            "nativeSrc": "4946:15:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4946:15:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "4940:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4940:2:8"
                                        },
                                        "nativeSrc": "4940:22:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4940:22:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "4926:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4926:2:8"
                                    },
                                    "nativeSrc": "4926:37:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4926:37:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4919:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4919:6:8"
                                },
                                "nativeSrc": "4919:45:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4919:45:8"
                              },
                              "nativeSrc": "4916:71:8",
                              "nodeType": "YulIf",
                              "src": "4916:71:8"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "4825:168:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4856:1:8",
                            "nodeType": "YulTypedName",
                            "src": "4856:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4859:1:8",
                            "nodeType": "YulTypedName",
                            "src": "4859:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "4865:7:8",
                            "nodeType": "YulTypedName",
                            "src": "4865:7:8",
                            "type": ""
                          }
                        ],
                        "src": "4825:168:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5044:171:8",
                          "nodeType": "YulBlock",
                          "src": "5044:171:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "5075:111:8",
                                "nodeType": "YulBlock",
                                "src": "5075:111:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5096:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5096:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5103:3:8",
                                              "nodeType": "YulLiteral",
                                              "src": "5103:3:8",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5108:10:8",
                                              "nodeType": "YulLiteral",
                                              "src": "5108:10:8",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "5099:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "5099:3:8"
                                          },
                                          "nativeSrc": "5099:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5099:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5089:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5089:6:8"
                                      },
                                      "nativeSrc": "5089:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5089:31:8"
                                    },
                                    "nativeSrc": "5089:31:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5089:31:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5140:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5140:1:8",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5143:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5143:4:8",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5133:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5133:6:8"
                                      },
                                      "nativeSrc": "5133:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5133:15:8"
                                    },
                                    "nativeSrc": "5133:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5133:15:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5168:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5168:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5171:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5171:4:8",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5161:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5161:6:8"
                                      },
                                      "nativeSrc": "5161:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5161:15:8"
                                    },
                                    "nativeSrc": "5161:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5161:15:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "5064:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5064:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "5057:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5057:6:8"
                                },
                                "nativeSrc": "5057:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5057:9:8"
                              },
                              "nativeSrc": "5054:132:8",
                              "nodeType": "YulIf",
                              "src": "5054:132:8"
                            },
                            {
                              "nativeSrc": "5195:14:8",
                              "nodeType": "YulAssignment",
                              "src": "5195:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5204:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5204:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5207:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5207:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "5200:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5200:3:8"
                                },
                                "nativeSrc": "5200:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5200:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "5195:1:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5195:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nativeSrc": "4998:217:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "5029:1:8",
                            "nodeType": "YulTypedName",
                            "src": "5029:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "5032:1:8",
                            "nodeType": "YulTypedName",
                            "src": "5032:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "5038:1:8",
                            "nodeType": "YulTypedName",
                            "src": "5038:1:8",
                            "type": ""
                          }
                        ],
                        "src": "4998:217:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5268:77:8",
                          "nodeType": "YulBlock",
                          "src": "5268:77:8",
                          "statements": [
                            {
                              "nativeSrc": "5278:16:8",
                              "nodeType": "YulAssignment",
                              "src": "5278:16:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5289:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5289:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5292:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5292:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5285:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5285:3:8"
                                },
                                "nativeSrc": "5285:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5285:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "5278:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5278:3:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5317:22:8",
                                "nodeType": "YulBlock",
                                "src": "5317:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "5319:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5319:16:8"
                                      },
                                      "nativeSrc": "5319:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5319:18:8"
                                    },
                                    "nativeSrc": "5319:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5319:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5309:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5309:1:8"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "5312:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5312:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "5306:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5306:2:8"
                                },
                                "nativeSrc": "5306:10:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5306:10:8"
                              },
                              "nativeSrc": "5303:36:8",
                              "nodeType": "YulIf",
                              "src": "5303:36:8"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "5220:125:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "5251:1:8",
                            "nodeType": "YulTypedName",
                            "src": "5251:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "5254:1:8",
                            "nodeType": "YulTypedName",
                            "src": "5254:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "5260:3:8",
                            "nodeType": "YulTypedName",
                            "src": "5260:3:8",
                            "type": ""
                          }
                        ],
                        "src": "5220:125:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5479:119:8",
                          "nodeType": "YulBlock",
                          "src": "5479:119:8",
                          "statements": [
                            {
                              "nativeSrc": "5489:26:8",
                              "nodeType": "YulAssignment",
                              "src": "5489:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5501:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5501:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5512:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5512:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5497:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5497:3:8"
                                },
                                "nativeSrc": "5497:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5497:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5489:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5489:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5531:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5531:9:8"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5542:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5542:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5524:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5524:6:8"
                                },
                                "nativeSrc": "5524:25:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5524:25:8"
                              },
                              "nativeSrc": "5524:25:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5524:25:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5569:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5569:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5580:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5580:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5565:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5565:3:8"
                                    },
                                    "nativeSrc": "5565:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5565:18:8"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5585:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5585:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5558:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5558:6:8"
                                },
                                "nativeSrc": "5558:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5558:34:8"
                              },
                              "nativeSrc": "5558:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5558:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "5350:248:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5440:9:8",
                            "nodeType": "YulTypedName",
                            "src": "5440:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5451:6:8",
                            "nodeType": "YulTypedName",
                            "src": "5451:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5459:6:8",
                            "nodeType": "YulTypedName",
                            "src": "5459:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5470:4:8",
                            "nodeType": "YulTypedName",
                            "src": "5470:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5350:248:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5760:188:8",
                          "nodeType": "YulBlock",
                          "src": "5760:188:8",
                          "statements": [
                            {
                              "nativeSrc": "5770:26:8",
                              "nodeType": "YulAssignment",
                              "src": "5770:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5782:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5782:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5793:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5793:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5778:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5778:3:8"
                                },
                                "nativeSrc": "5778:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5778:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5770:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5770:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5812:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5812:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5827:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5827:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5843:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "5843:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5848:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "5848:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5839:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "5839:3:8"
                                            },
                                            "nativeSrc": "5839:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5839:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5852:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "5852:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5835:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "5835:3:8"
                                        },
                                        "nativeSrc": "5835:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5835:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5823:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5823:3:8"
                                    },
                                    "nativeSrc": "5823:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5823:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5805:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5805:6:8"
                                },
                                "nativeSrc": "5805:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5805:51:8"
                              },
                              "nativeSrc": "5805:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5805:51:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5876:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5876:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5887:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5887:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5872:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5872:3:8"
                                    },
                                    "nativeSrc": "5872:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5872:18:8"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5892:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5892:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5865:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5865:6:8"
                                },
                                "nativeSrc": "5865:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5865:34:8"
                              },
                              "nativeSrc": "5865:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5865:34:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5919:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5919:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5930:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5930:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5915:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5915:3:8"
                                    },
                                    "nativeSrc": "5915:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5915:18:8"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5935:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5935:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5908:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5908:6:8"
                                },
                                "nativeSrc": "5908:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5908:34:8"
                              },
                              "nativeSrc": "5908:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5908:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "5603:345:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5713:9:8",
                            "nodeType": "YulTypedName",
                            "src": "5713:9:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "5724:6:8",
                            "nodeType": "YulTypedName",
                            "src": "5724:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5732:6:8",
                            "nodeType": "YulTypedName",
                            "src": "5732:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5740:6:8",
                            "nodeType": "YulTypedName",
                            "src": "5740:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5751:4:8",
                            "nodeType": "YulTypedName",
                            "src": "5751:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5603:345:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "6127:177:8",
                          "nodeType": "YulBlock",
                          "src": "6127:177:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6144:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6144:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6155:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6155:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6137:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6137:6:8"
                                },
                                "nativeSrc": "6137:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6137:21:8"
                              },
                              "nativeSrc": "6137:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6137:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6178:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6178:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6189:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6189:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6174:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6174:3:8"
                                    },
                                    "nativeSrc": "6174:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6174:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6194:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6194:2:8",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6167:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6167:6:8"
                                },
                                "nativeSrc": "6167:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6167:30:8"
                              },
                              "nativeSrc": "6167:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6167:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6217:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6217:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6228:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6228:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6213:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6213:3:8"
                                    },
                                    "nativeSrc": "6213:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6213:18:8"
                                  },
                                  {
                                    "hexValue": "496e76616c69642070726f746f636f6c2066656520666163746f72",
                                    "kind": "string",
                                    "nativeSrc": "6233:29:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6233:29:8",
                                    "type": "",
                                    "value": "Invalid protocol fee factor"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6206:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6206:6:8"
                                },
                                "nativeSrc": "6206:57:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6206:57:8"
                              },
                              "nativeSrc": "6206:57:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6206:57:8"
                            },
                            {
                              "nativeSrc": "6272:26:8",
                              "nodeType": "YulAssignment",
                              "src": "6272:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6284:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6284:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6295:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6295:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6280:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6280:3:8"
                                },
                                "nativeSrc": "6280:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6280:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6272:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6272:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0f8b1980f48fa75071ee6c49ec20fad42b0a50c9de1d75b15eb3fdd1c5fe125a__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5953:351:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6104:9:8",
                            "nodeType": "YulTypedName",
                            "src": "6104:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6118:4:8",
                            "nodeType": "YulTypedName",
                            "src": "6118:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5953:351:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "6483:179:8",
                          "nodeType": "YulBlock",
                          "src": "6483:179:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6500:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6500:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6511:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6511:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6493:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6493:6:8"
                                },
                                "nativeSrc": "6493:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6493:21:8"
                              },
                              "nativeSrc": "6493:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6493:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6534:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6534:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6545:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6545:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6530:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6530:3:8"
                                    },
                                    "nativeSrc": "6530:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6530:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6550:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6550:2:8",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6523:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6523:6:8"
                                },
                                "nativeSrc": "6523:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6523:30:8"
                              },
                              "nativeSrc": "6523:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6523:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6573:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6573:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6584:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6584:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6569:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6569:3:8"
                                    },
                                    "nativeSrc": "6569:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6569:18:8"
                                  },
                                  {
                                    "hexValue": "496e76616c69642070726f746f636f6c2066656520646563696d616c73",
                                    "kind": "string",
                                    "nativeSrc": "6589:31:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6589:31:8",
                                    "type": "",
                                    "value": "Invalid protocol fee decimals"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6562:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6562:6:8"
                                },
                                "nativeSrc": "6562:59:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6562:59:8"
                              },
                              "nativeSrc": "6562:59:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6562:59:8"
                            },
                            {
                              "nativeSrc": "6630:26:8",
                              "nodeType": "YulAssignment",
                              "src": "6630:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6642:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6642:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6653:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6653:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6638:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6638:3:8"
                                },
                                "nativeSrc": "6638:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6638:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6630:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6630:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_de2705891d4e97fb2694e2778382fbb891ffcbb2ceee5147388962b94a59f294__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "6309:353:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6460:9:8",
                            "nodeType": "YulTypedName",
                            "src": "6460:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6474:4:8",
                            "nodeType": "YulTypedName",
                            "src": "6474:4:8",
                            "type": ""
                          }
                        ],
                        "src": "6309:353:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "6841:182:8",
                          "nodeType": "YulBlock",
                          "src": "6841:182:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6858:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6858:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6869:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6869:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6851:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6851:6:8"
                                },
                                "nativeSrc": "6851:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6851:21:8"
                              },
                              "nativeSrc": "6851:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6851:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6892:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6892:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6903:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6903:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6888:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6888:3:8"
                                    },
                                    "nativeSrc": "6888:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6888:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6908:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6908:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6881:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6881:6:8"
                                },
                                "nativeSrc": "6881:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6881:30:8"
                              },
                              "nativeSrc": "6881:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6881:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6931:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6931:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6942:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6942:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6927:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6927:3:8"
                                    },
                                    "nativeSrc": "6927:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6927:18:8"
                                  },
                                  {
                                    "hexValue": "496e76616c69642070726f746f636f6c2065786974206d756c7469706c696572",
                                    "kind": "string",
                                    "nativeSrc": "6947:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6947:34:8",
                                    "type": "",
                                    "value": "Invalid protocol exit multiplier"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6920:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6920:6:8"
                                },
                                "nativeSrc": "6920:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6920:62:8"
                              },
                              "nativeSrc": "6920:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6920:62:8"
                            },
                            {
                              "nativeSrc": "6991:26:8",
                              "nodeType": "YulAssignment",
                              "src": "6991:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7003:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7003:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7014:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7014:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6999:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6999:3:8"
                                },
                                "nativeSrc": "6999:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6999:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6991:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6991:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0ac4eb53c5ef927cab2843d4ff7bb6b429b04c56a7eb9ff18f274a79b549fa24__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "6667:356:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6818:9:8",
                            "nodeType": "YulTypedName",
                            "src": "6818:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6832:4:8",
                            "nodeType": "YulTypedName",
                            "src": "6832:4:8",
                            "type": ""
                          }
                        ],
                        "src": "6667:356:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "7185:162:8",
                          "nodeType": "YulBlock",
                          "src": "7185:162:8",
                          "statements": [
                            {
                              "nativeSrc": "7195:26:8",
                              "nodeType": "YulAssignment",
                              "src": "7195:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7207:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7207:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7218:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7218:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7203:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7203:3:8"
                                },
                                "nativeSrc": "7203:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7203:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "7195:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7195:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7237:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7237:9:8"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "7248:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7248:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7230:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7230:6:8"
                                },
                                "nativeSrc": "7230:25:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7230:25:8"
                              },
                              "nativeSrc": "7230:25:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7230:25:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7275:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7275:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7286:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "7286:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7271:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7271:3:8"
                                    },
                                    "nativeSrc": "7271:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7271:18:8"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "7291:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7291:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7264:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7264:6:8"
                                },
                                "nativeSrc": "7264:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7264:34:8"
                              },
                              "nativeSrc": "7264:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7264:34:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7318:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7318:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7329:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "7329:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7314:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7314:3:8"
                                    },
                                    "nativeSrc": "7314:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7314:18:8"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "7334:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7334:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7307:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7307:6:8"
                                },
                                "nativeSrc": "7307:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7307:34:8"
                              },
                              "nativeSrc": "7307:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7307:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "7028:319:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7138:9:8",
                            "nodeType": "YulTypedName",
                            "src": "7138:9:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "7149:6:8",
                            "nodeType": "YulTypedName",
                            "src": "7149:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "7157:6:8",
                            "nodeType": "YulTypedName",
                            "src": "7157:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "7165:6:8",
                            "nodeType": "YulTypedName",
                            "src": "7165:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "7176:4:8",
                            "nodeType": "YulTypedName",
                            "src": "7176:4:8",
                            "type": ""
                          }
                        ],
                        "src": "7028:319:8"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0f8b1980f48fa75071ee6c49ec20fad42b0a50c9de1d75b15eb3fdd1c5fe125a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid protocol fee factor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_de2705891d4e97fb2694e2778382fbb891ffcbb2ceee5147388962b94a59f294__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Invalid protocol fee decimals\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0ac4eb53c5ef927cab2843d4ff7bb6b429b04c56a7eb9ff18f274a79b549fa24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Invalid protocol exit multiplier\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x131 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA8 JUMPI DUP1 PUSH4 0x982B5047 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0x982B5047 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xFB49B207 EQ PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x72F90A9D EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x7AF3816C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x47E75CFE EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x564F4F76 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A1137B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x11E3BDDE EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x14A8BD0D EQ PUSH2 0x1C7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH7 0x2386F26FC10000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH6 0xCBBA106E000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x512 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x525 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH2 0x24C PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E7 SWAP1 PUSH2 0xE10 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x413 SWAP1 PUSH2 0xE10 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x435 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x441 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x475 DUP2 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48E DUP6 DUP3 DUP6 PUSH2 0x797 JUMP JUMPDEST PUSH2 0x499 DUP6 DUP6 DUP6 PUSH2 0x80C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4AC PUSH2 0x869 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH2 0x4C7 DUP3 PUSH1 0xA PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4D9 PUSH2 0x869 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH0 SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x50E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x51A PUSH2 0x869 JUMP JUMPDEST PUSH2 0x523 PUSH0 PUSH2 0x9F3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E7 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x475 DUP2 DUP6 DUP6 PUSH2 0x80C JUMP JUMPDEST PUSH2 0x549 PUSH2 0xA44 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC44DCBD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57B CALLER DUP3 PUSH2 0xA6E JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x595 PUSH6 0xCBBA106E000 DUP5 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x5A7 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD DUP5 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH1 0x9 SLOAD PUSH7 0x2386F26FC10000 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x603 JUMPI DUP1 SWAP3 POP JUMPDEST DUP3 DUP5 SUB SWAP2 POP DUP3 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xF7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x648 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x657 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x662 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x657 DUP2 PUSH2 0x9F3 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC44DCBD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6D1 PUSH6 0xCBBA106E000 DUP5 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x6E3 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0x701 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH7 0x2386F26FC10000 DUP3 GT ISZERO PUSH2 0x728 JUMPI PUSH7 0x2386F26FC10000 SWAP2 POP JUMPDEST PUSH2 0x732 DUP3 DUP5 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH4 0x8CDD9083 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x568 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0xF7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x77F SWAP1 POP CALLER DUP6 PUSH2 0xAA2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x792 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAD6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x77F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x77F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x792 DUP4 DUP4 DUP4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 DUP4 LT DUP1 PUSH2 0x8A5 JUMPI POP PUSH1 0x9 DUP4 GT JUMPDEST ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x305CD7D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F746F636F6C2066656520666163746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x2 DUP3 LT DUP1 PUSH2 0x902 JUMPI POP PUSH1 0x12 DUP3 GT JUMPDEST ISZERO PUSH2 0x950 JUMPI PUSH1 0x40 MLOAD PUSH4 0x305CD7D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F746F636F6C2066656520646563696D616C73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 DUP2 LT DUP1 PUSH2 0x95F JUMPI POP PUSH1 0x5 DUP2 GT JUMPDEST ISZERO PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x305CD7D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F746F636F6C2065786974206D756C7469706C696572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xB03CBA1FD26BEE931DA9FAC9C0A6B1EC951FA21622FB17480ACB831A2A83ED6D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x50E DUP3 PUSH0 DUP4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH2 0x50E PUSH0 DUP4 DUP4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x77F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB9A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBD2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0xF7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xC42 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC5E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xCC1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD19 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD38 DUP4 PUSH2 0xD03 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD58 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD61 DUP5 PUSH2 0xD03 JUMP JUMPDEST SWAP3 POP PUSH2 0xD6F PUSH1 0x20 DUP6 ADD PUSH2 0xD03 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDC1 DUP3 PUSH2 0xD03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDF9 DUP4 PUSH2 0xD03 JUMP JUMPDEST SWAP2 POP PUSH2 0xE07 PUSH1 0x20 DUP5 ADD PUSH2 0xD03 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE24 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE42 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xE96 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0xE48 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xE89 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xE61 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xEAC JUMPI POP PUSH1 0x1 PUSH2 0x47B JUMP JUMPDEST DUP2 PUSH2 0xEB8 JUMPI POP PUSH0 PUSH2 0x47B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xECE JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xED8 JUMPI PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x47B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE9 PUSH2 0xE48 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x47B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xF17 JUMPI POP DUP2 DUP2 EXP PUSH2 0x47B JUMP JUMPDEST PUSH2 0xF21 DUP4 DUP4 PUSH2 0xE5C JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF34 PUSH2 0xE48 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDC1 DUP4 DUP4 PUSH2 0xE9E JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0xE48 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0xE48 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH8 0x5A0B37DD51E2BEBF LOG4 0x21 RETURNDATASIZE SELFBALANCE 0xEF PUSH24 0x5D3DD41DC44BDFC4BA4C2F8772ACC58464736F6C63430008 NOT STOP CALLER ",
              "sourceMap": "804:6263:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;930:61;;;;;;;;;;;;981:10;930:61;;;;;160:25:8;;;148:2;133:18;930:61:7;;;;;;;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;;;;;-1:-1:-1;4293:186:2;;;;;:::i;:::-;;:::i;:::-;;;1221:14:8;;1214:22;1196:41;;1184:2;1169:18;4293:186:2;1056:187:8;1296:32:7;;;;;;;;;;;;;;;;870:54;;;;;;;;;;;;910:14;870:54;;3144:97:2;;;;;;;;;;-1:-1:-1;3222:12:2;;3144:97;;5039:244;;;;;;;;;;-1:-1:-1;5039:244:2;;;;;:::i;:::-;;:::i;2105:82:7:-;;;;;;;;;;-1:-1:-1;2105:82:7;;2155:5;1723:36:8;;1711:2;1696:18;2105:82:7;1581:184:8;5142:477:7;;;;;;;;;;-1:-1:-1;5142:477:7;;;;;:::i;:::-;;:::i;:::-;;5675:189;;;;;;;;;;;;;:::i;3299:116:2:-;;;;;;;;;;-1:-1:-1;3299:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;;;;;;;;;;;:::i;1371:37:7:-;;;;;;;;;;;;;;;;1415:30;;;;;;;;;;;;;;;;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2428:51:8;;2416:2;2401:18;1638:85:0;2282:203:8;2276:93:2;;;;;;;;;;;;;:::i;1334:31:7:-;;;;;;;;;;;;;;;;3610:178:2;;;;;;;;;;-1:-1:-1;3610:178:2;;;;;:::i;:::-;;:::i;3529:1162:7:-;;;;;;;;;;-1:-1:-1;3529:1162:7;;;;;:::i;:::-;;:::i;3846:140:2:-;;;;;;;;;;-1:-1:-1;3846:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;2645:633:7:-;;;;;;:::i;:::-;;:::i;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;5142:477:7:-;1531:13:0;:11;:13::i;:::-;5319:131:7::1;5351:18;5383:20;5417:23;5319:18;:131::i;:::-;5461:17;:38:::0;;;5528:26:::1;5534:20:::0;5528:2:::1;:26;:::i;:::-;5509:16;:45:::0;5564:22:::1;:48:::0;-1:-1:-1;;5142:477:7:o;5675:189::-;1531:13:0;:11;:13::i;:::-;5755:15:7::1;::::0;;5728:24:::1;5780:19:::0;;;;5809:48:::1;::::0;5755:15;;735:10:5;;5809:48:7;::::1;;;::::0;5755:15;;5809:48;;5728:24;5809:48;5755:15;735:10:5;5809:48:7;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5718:146;5675:189::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;3529:1162:7:-;2356:21:6;:19;:21::i;:::-;3607:1:7::1;3597:6;:11;3593:83;;3631:34;::::0;-1:-1:-1;;;3631:34:7;;::::1;::::0;::::1;160:25:8::0;;;133:18;;3631:34:7::1;;;;;;;;3593:83;3686:27;735:10:5::0;3706:6:7::1;3686:5;:27::i;:::-;3724:17;3781:7;3745:22;910:14;3745:6:::0;:22:::1;:::i;:::-;:32;::::0;3770:7:::1;3745:32;:::i;:::-;3744:44;;;;:::i;:::-;3724:64;;3798:11;3883:16;;3845:22;;3825:17;;3813:9;:29;;;;:::i;:::-;:54;;;;:::i;:::-;3812:87;;;;:::i;:::-;3798:101;;3909:13;3937:34:::0;4013:22:::1;;981:10;3974:61;;;;:::i;:::-;3937:98;;4463:26;4457:3;:32;4453:103;;;4515:26;4509:32;;4453:103;4590:3;4578:9;:15;4570:23;;4633:3;4614:15;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4647:37:7::1;::::0;735:10:5;;4647:37:7;::::1;;;::::0;4678:5;;4647:37:::1;::::0;;;4678:5;735:10:5;4647:37:7;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3583:1108;;;;2398:20:6::0;1713:1;2924:7;:21;2744:208;2398:20;3529:1162:7;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2428:51:8::0;2401:18;;2672:31:0::1;2282:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2645:633:7:-:0;2716:1;2706:6;:11;2702:83;;2740:34;;-1:-1:-1;;;2740:34:7;;;;;160:25:8;;;133:18;;2740:34:7;14:177:8;2702:83:7;2795:17;2852:7;2816:22;910:14;2816:6;:22;:::i;:::-;:32;;2841:7;2816:32;:::i;:::-;2815:44;;;;:::i;:::-;2795:64;;2869:11;2917:16;;2896:17;;2884:9;:29;;;;:::i;:::-;2883:50;;;;:::i;:::-;2869:64;;2943:13;981:10;2975:3;:30;2971:91;;;981:10;3021:30;;2971:91;3080:15;3092:3;3080:9;:15;:::i;:::-;3072:23;;3122:5;3110:9;:17;3106:95;;;3150:40;;-1:-1:-1;;;3150:40:7;;;;;5524:25:8;;;3180:9:7;5565:18:8;;;5558:34;5497:18;;3150:40:7;5350:248:8;3106:95:7;3230:3;3211:15;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;3244:27:7;;-1:-1:-1;735:10:5;3264:6:7;3244:5;:27::i;:::-;2692:586;;;2645:633;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;5823:32:8;;10936:60:2;;;5805:51:8;5872:18;;;5865:34;;;5915:18;;;5908:34;;;5778:18;;10936:60:2;5603:345:8;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2428:51:8;2401:18;;5780:30:2;2282:203:8;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2428:51:8;2401:18;;5873:32:2;2282:203:8;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2428:51:8;2401:18;;1901:40:0;2282:203:8;6295:770:7;6488:1;6467:18;:22;:48;;;;6514:1;6493:18;:22;6467:48;6463:136;;;6538:50;;-1:-1:-1;;;6538:50:7;;6155:2:8;6538:50:7;;;6137:21:8;6194:2;6174:18;;;6167:30;6233:29;6213:18;;;6206:57;6280:18;;6538:50:7;5953:351:8;6463:136:7;6636:1;6613:20;:24;:53;;;;6664:2;6641:20;:25;6613:53;6609:143;;;6689:52;;-1:-1:-1;;;6689:52:7;;6511:2:8;6689:52:7;;;6493:21:8;6550:2;6530:18;;;6523:30;6589:31;6569:18;;;6562:59;6638:18;;6689:52:7;6309:353:8;6609:143:7;6792:1;6766:23;:27;:58;;;;6823:1;6797:23;:27;6766:58;6762:151;;;6847:55;;-1:-1:-1;;;6847:55:7;;6869:2:8;6847:55:7;;;6851:21:8;;;6888:18;;;6881:30;6947:34;6927:18;;;6920:62;6999:18;;6847:55:7;6667:356:8;6762:151:7;6928:130;;;7230:25:8;;;7286:2;7271:18;;7264:34;;;7314:18;;;7307:34;;;6928:130:7;;7218:2:8;7203:18;6928:130:7;;;;;;;6295:770;;;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2431:307:6:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:6;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;8247:206:2:-;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;2428:51:8;2401:18;;8361:30:2;2282:203:8;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;7721:208::-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2428:51:8;2401:18;;7835:32:2;2282:203:8;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2428:51:8;2401:18;;10103:32:2;2282:203:8;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2428:51:8;2401:18;;10203:31:2;2282:203:8;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;160:25:8;;148:2;133:18;;14:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;5823:32:8;;6649:50:2;;;5805:51:8;5872:18;;;5865:34;;;5915:18;;;5908:34;;;5778:18;;6649:50:2;5603:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;160::8;;148:2;133:18;;14:177;7346:25:2;;;;;;;;6271:1107;;;:::o;196:418:8:-;345:2;334:9;327:21;308:4;377:6;371:13;420:6;415:2;404:9;400:18;393:34;479:6;474:2;466:6;462:15;457:2;446:9;442:18;436:50;535:1;530:2;521:6;510:9;506:22;502:31;495:42;605:2;598;594:7;589:2;581:6;577:15;573:29;562:9;558:45;554:54;546:62;;;196:418;;;;:::o;619:173::-;687:20;;-1:-1:-1;;;;;736:31:8;;726:42;;716:70;;782:1;779;772:12;716:70;619:173;;;:::o;797:254::-;865:6;873;926:2;914:9;905:7;901:23;897:32;894:52;;;942:1;939;932:12;894:52;965:29;984:9;965:29;:::i;:::-;955:39;1041:2;1026:18;;;;1013:32;;-1:-1:-1;;;797:254:8:o;1248:328::-;1325:6;1333;1341;1394:2;1382:9;1373:7;1369:23;1365:32;1362:52;;;1410:1;1407;1400:12;1362:52;1433:29;1452:9;1433:29;:::i;:::-;1423:39;;1481:38;1515:2;1504:9;1500:18;1481:38;:::i;:::-;1471:48;;1566:2;1555:9;1551:18;1538:32;1528:42;;1248:328;;;;;:::o;1770:316::-;1847:6;1855;1863;1916:2;1904:9;1895:7;1891:23;1887:32;1884:52;;;1932:1;1929;1922:12;1884:52;-1:-1:-1;;1955:23:8;;;2025:2;2010:18;;1997:32;;-1:-1:-1;2076:2:8;2061:18;;;2048:32;;1770:316;-1:-1:-1;1770:316:8:o;2091:186::-;2150:6;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;2242:29;2261:9;2242:29;:::i;:::-;2232:39;2091:186;-1:-1:-1;;;2091:186:8:o;2490:180::-;2549:6;2602:2;2590:9;2581:7;2577:23;2573:32;2570:52;;;2618:1;2615;2608:12;2570:52;-1:-1:-1;2641:23:8;;2490:180;-1:-1:-1;2490:180:8:o;2675:260::-;2743:6;2751;2804:2;2792:9;2783:7;2779:23;2775:32;2772:52;;;2820:1;2817;2810:12;2772:52;2843:29;2862:9;2843:29;:::i;:::-;2833:39;;2891:38;2925:2;2914:9;2910:18;2891:38;:::i;:::-;2881:48;;2675:260;;;;;:::o;2940:380::-;3019:1;3015:12;;;;3062;;;3083:61;;3137:4;3129:6;3125:17;3115:27;;3083:61;3190:2;3182:6;3179:14;3159:18;3156:38;3153:161;;3236:10;3231:3;3227:20;3224:1;3217:31;3271:4;3268:1;3261:15;3299:4;3296:1;3289:15;3153:161;;2940:380;;;:::o;3325:127::-;3386:10;3381:3;3377:20;3374:1;3367:31;3417:4;3414:1;3407:15;3441:4;3438:1;3431:15;3457:416;3546:1;3583:5;3546:1;3597:270;3618:7;3608:8;3605:21;3597:270;;;3677:4;3673:1;3669:6;3665:17;3659:4;3656:27;3653:53;;;3686:18;;:::i;:::-;3736:7;3726:8;3722:22;3719:55;;;3756:16;;;;3719:55;3835:22;;;;3795:15;;;;3597:270;;;3601:3;3457:416;;;;;:::o;3878:806::-;3927:5;3957:8;3947:80;;-1:-1:-1;3998:1:8;4012:5;;3947:80;4046:4;4036:76;;-1:-1:-1;4083:1:8;4097:5;;4036:76;4128:4;4146:1;4141:59;;;;4214:1;4209:130;;;;4121:218;;4141:59;4171:1;4162:10;;4185:5;;;4209:130;4246:3;4236:8;4233:17;4230:43;;;4253:18;;:::i;:::-;-1:-1:-1;;4309:1:8;4295:16;;4324:5;;4121:218;;4423:2;4413:8;4410:16;4404:3;4398:4;4395:13;4391:36;4385:2;4375:8;4372:16;4367:2;4361:4;4358:12;4354:35;4351:77;4348:159;;;-1:-1:-1;4460:19:8;;;4492:5;;4348:159;4539:34;4564:8;4558:4;4539:34;:::i;:::-;4609:6;4605:1;4601:6;4597:19;4588:7;4585:32;4582:58;;;4620:18;;:::i;:::-;4658:20;;3878:806;-1:-1:-1;;;3878:806:8:o;4689:131::-;4749:5;4778:36;4805:8;4799:4;4778:36;:::i;4825:168::-;4898:9;;;4929;;4946:15;;;4940:22;;4926:37;4916:71;;4967:18;;:::i;4998:217::-;5038:1;5064;5054:132;;5108:10;5103:3;5099:20;5096:1;5089:31;5143:4;5140:1;5133:15;5171:4;5168:1;5161:15;5054:132;-1:-1:-1;5200:9:8;;4998:217::o;5220:125::-;5285:9;;;5306:10;;;5303:36;;;5319:18;;:::i"
            },
            "methodIdentifiers": {
              "EXCHANGE_RATE()": "14a8bd0d",
              "PROTOCOL_FEE_UPPER_LIMIT()": "01a1137b",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "claimRevenue()": "564f4f76",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "pawn(uint256)": "fb49b207",
              "protocolExitMultiplier()": "72f90a9d",
              "protocolFeeFactor()": "11e3bdde",
              "protocolFeeScale()": "982b5047",
              "protocolRevenue()": "7af3816c",
              "redeem(uint256)": "db006a75",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "updateProtocolFee(uint256,uint256,uint256)": "47e75cfe"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputed\",\"type\":\"uint256\"}],\"name\":\"InsufficientFundsError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputed\",\"type\":\"uint256\"}],\"name\":\"InvalidExchangeAmountError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"SetProtocolFeeError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFeeFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFeeScale\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolExitMultiplier\",\"type\":\"uint256\"}],\"name\":\"UpdateProtocolFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EXCHANGE_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTOCOL_FEE_UPPER_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pawn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolExitMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_protocolFeeFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFeeDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_protocolExitMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0xmmq\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"returns\":{\"_0\":\"Decimal precision\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pawn(uint256)\":{\"params\":{\"amount\":\"The number of JCC tokens that users expect to receive\"}},\"redeem(uint256)\":{\"params\":{\"amount\":\"The number of JCC tokens to swap for ETH\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateProtocolFee(uint256,uint256,uint256)\":{\"details\":\"Parameter values must comply with the range defined in advance to ensure that the protocol fee is within a reasonable range\",\"params\":{\"_protocolExitMultiplier\":\"Exit multiplier for protocol protection\",\"_protocolFeeDecimals\":\"Protocol fee denominator decimals\",\"_protocolFeeFactor\":\"Protocol fee numerator\"}}},\"title\":\"JCC(JumpCrossCoupon)-ERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"Inform the user of the decimal precision of this token.\"},\"pawn(uint256)\":{\"notice\":\"Users specify the amount of JCC tokens they expect to receive. After a series of checks, the contract will send JCC tokens to the user by exchanging ETH for JCC tokens at a fixed exchange rate. Users have to send extra protocol fee in order for this function to execute successfully.\"},\"protocolFeeFactor()\":{\"notice\":\"The following variables are used to calculate the protocol fee. The fomula is: fee = (userSentEth * protocolFeeFactor) / 10^protocolFeeScale Pawn fee range: [1e-18, Min(9%, 0.01 eth)]. Redeem fee range: [1e-18, Min(45%, 0.01 * _protocolExitMultiplier eth)].\"},\"redeem(uint256)\":{\"notice\":\"Users specify the amount of JCC tokens they expect to swap for ETH. Users have to send extra protocol fee in order for this function to execute successfully.\"},\"updateProtocolFee(uint256,uint256,uint256)\":{\"notice\":\"Update the protocol fee parameters\"}},\"notice\":\"You can use this contract to convert or redeem the JumpCross game coupon to play or exit the game.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JumpCrossCoupon.sol\":\"JumpCrossCoupon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/JumpCrossCoupon.sol\":{\"keccak256\":\"0x05f561b98dc77cb3fb109e2274bce4b15ca92025a2260e9b96e02dd90d1bcb95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363e45d0f78db870b5f58b6b654978a83aa879713e982d3d123d212de3a051ea\",\"dweb:/ipfs/QmdD6mGSgJNXrbA8dhCFPZNDCjfPM9u7jgaRp12nH4HiYM\"]}},\"version\":1}"
        }
      }
    }
  }
}